on: [push, pull_request]

name: R-check

jobs:
  R-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: 'release'}
        - { os: macOS-latest, r: 'release'}
        - { os: macOS-latest, r: 'devel', http-user-agent: 'release'}
        - { os: ubuntu-latest, r: 'devel', http-user-agent: 'release'}
        - { os: ubuntu-latest, r: 'oldrel'}
        - { os: ubuntu-latest, r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'

      # - name: Cache R packages
      #   if: runner.os != 'Windows'
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ env.R_LIBS_USER }}
      #     key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('DESCRIPTION') }}

      # - name: Install system dependencies
      #   if: runner.os == 'Linux'
      #   env:
      #     RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
      #   run: |
      #     Rscript -e "install.packages('remotes')" -e "remotes::install_github('r-hub/sysreqs')"
      #     sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
      #     sudo -s eval "$sysreqs"
      
      # - name: Install dependencies
      #   run: Rscript -e "install.packages('remotes')" -e "remotes::install_deps(dependencies = TRUE)" -e "remotes::install_cran('rcmdcheck')"

      # - name: Check
      #   run: Rscript -e "rcmdcheck::rcmdcheck(args = '--no-manual', error_on = 'warning', check_dir = 'check')"

      # - name: Upload check results
      #   if: failure()
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: ${{ runner.os }}-r${{ matrix.config.r }}-results
      #     path: check

      # - name: Test coverage
      #   if: matrix.config.os == 'macOS-latest' && matrix.config.r == 'latest'
      #   run: |
      #     Rscript -e 'install.packages("covr")' -e 'covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")'
