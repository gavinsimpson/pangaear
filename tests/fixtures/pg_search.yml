http_interactions:
- request:
    method: get
    uri: https://www.pangaea.de/advanced/search.php?count=10&offset=0&q=water
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/4.0 crul/0.8.4.9100
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      cache-control: private, max-age=10800, pre-check=10800
      content-encoding: gzip
      content-type: application/json; charset=UTF-8
      date: Wed, 11 Sep 2019 20:33:04 GMT
      last-modified: Fri, 15 Apr 2016 11:55:50 GMT
      server: PANGAEA/2.0
      status: 'HTTP/2 200 '
      strict-transport-security: max-age=31536000
      vary:
      - Accept-Encoding
      - Cookie, X-PanLoginID
      x-content-type-options: nosniff
      x-frame-options: SAMEORIGIN
      x-ua-compatible: IE=Edge
    body:
      encoding: ASCII-8BIT
      string: 
  recorded_at: 2019-09-11 20:33:07 GMT
  recorded_with: vcr/0.3.0.9100, webmockr/0.4.0
- request:
    method: get
    uri: https://www.pangaea.de/advanced/search.php?count=2&offset=0&q=water
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/4.0 crul/0.8.4.9100
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      cache-control: private, max-age=10800, pre-check=10800
      content-encoding: gzip
      content-type: application/json; charset=UTF-8
      date: Wed, 11 Sep 2019 20:33:05 GMT
      last-modified: Fri, 15 Apr 2016 11:55:50 GMT
      server: PANGAEA/2.0
      status: 'HTTP/2 200 '
      strict-transport-security: max-age=31536000
      vary:
      - Accept-Encoding
      - Cookie, X-PanLoginID
      x-content-type-options: nosniff
      x-frame-options: SAMEORIGIN
      x-ua-compatible: IE=Edge
    body:
      encoding: ASCII-8BIT
      string: eyJyZXN1bHRzIjpbeyJVUkkiOiJkb2k6MTAuMTU5NFwvUEFOR0FFQS44OTI4MTIiLCJzY29yZSI6MjEuMTE4ODM0LCJodG1sIjoiPGxpPjxkaXYgY2xhc3M9XCJjaXRhdGlvblwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuODkyODEyXCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGlua1wiPjxzdHJvbmc+UXVhZGUsIE07IEJyw7xnZ2VtYW5uLCBOOyBHcmFmLCBBIGV0IGFsLiAoMjAxOCk6PFwvc3Ryb25nPiBEYXRhIGZvciBraW5ldGljIGlzb3RvcGljIGZyYWN0aW9uYXRpb24gb2Ygd2F0ZXIgZHVyaW5nIGJhcmUgc29pbCBldmFwb3JhdGlvbjxcL2E+PFwvZGl2Pjx0YWJsZSBjbGFzcz1cInJlc3VsdFwiIHN1bW1hcnk9XCJEYXRhc2V0IHJlZmVyZW5jZSBhbmQgc2l6ZVwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlN1cHBsZW1lbnQgdG86PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjxzdHJvbmc+UXVhZGUsIE07IEJyw7xnZ2VtYW5uLCBOOyBHcmFmLCBBIGV0IGFsLiAoMjAxOCk6PFwvc3Ryb25nPiBJbnZlc3RpZ2F0aW9uIG9mIEtpbmV0aWMgSXNvdG9waWMgRnJhY3Rpb25hdGlvbiBvZiBXYXRlciBkdXJpbmcgQmFyZSBTb2lsIEV2YXBvcmF0aW9uLiA8ZW0+V2F0ZXIgUmVzb3VyY2VzIFJlc2VhcmNoPFwvZW0+PFwvdGQ+PFwvdHI+PHRyPjx0ZCBjbGFzcz1cInRpdGxlXCI+U2l6ZTo8XC90ZD48dGQgY2xhc3M9XCJjb250ZW50XCI+NSBkYXRhc2V0czxcL3RkPjxcL3RyPjxcL3RhYmxlPjxkaXYgY2xhc3M9XCJkYXRhc2V0aWRcIj48YSBocmVmPVwiaHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjg5MjgxMlwiIHRhcmdldD1cIl9zZWxmXCIgY2xhc3M9XCJkYXRhc2V0LWxpbmsgZG9pLWxpbmtcIj5odHRwczpcL1wvZG9pLm9yZ1wvMTAuMTU5NFwvUEFOR0FFQS44OTI4MTI8XC9hPiAtIDxzcGFuIHRpdGxlPVwiVGhlIHNjb3JlIGlzIGEgbWVhc3VyZW1lbnQgb2YgcmVsZXZhbmN5IChzZWUgVEYtSURGIGFsZ29yaXRobSkuIFRoZSB2YWx1ZSBpcyBub3QgYWJzb2x1dGUgYW5kIG9ubHkgc3VpdGFibGUgdG8gY29tcGFyZSBoaXRzIGZyb20gdGhlIHNhbWUgcmVzdWx0IHNldC5cIj5TY29yZTogMjEuMTI8XC9zcGFuPjxcL2Rpdj48XC9saT4ifSx7IlVSSSI6ImRvaToxMC4xNTk0XC9QQU5HQUVBLjg5NTM4MyIsInNjb3JlIjoxOS40NDE4MSwiaHRtbCI6IjxsaT48ZGl2IGNsYXNzPVwiY2l0YXRpb25cIj48YSBocmVmPVwiaHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjg5NTM4M1wiIHRhcmdldD1cIl9zZWxmXCIgY2xhc3M9XCJkYXRhc2V0LWxpbmtcIj48c3Ryb25nPktvcm1hbiwgQiAoMjAxOCk6PFwvc3Ryb25nPiBMYWtlIHdhdGVyIGFuYWx5c2lzIGZyb20gdGhlIFJhcHBib2RlIGRhbSBpbiBTYXhvbnktQW5oYWx0IGR1cmluZyB0aGUgSW5sYW5kIFdhdGVyIFJlbW90ZSBTZW5zaW5nIFZhbGlkYXRpb24gQ2FtcGFpZ24gMjAxNzxcL2E+PFwvZGl2Pjx0YWJsZSBjbGFzcz1cInJlc3VsdFwiIHN1bW1hcnk9XCJEYXRhc2V0IHJlZmVyZW5jZSBhbmQgc2l6ZVwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlNpemU6PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjEgZGF0YXNldHM8XC90ZD48XC90cj48XC90YWJsZT48ZGl2IGNsYXNzPVwiZGF0YXNldGlkXCI+PGEgaHJlZj1cImh0dHBzOlwvXC9kb2kucGFuZ2FlYS5kZVwvMTAuMTU5NFwvUEFOR0FFQS44OTUzODNcIiB0YXJnZXQ9XCJfc2VsZlwiIGNsYXNzPVwiZGF0YXNldC1saW5rIGRvaS1saW5rXCI+aHR0cHM6XC9cL2RvaS5vcmdcLzEwLjE1OTRcL1BBTkdBRUEuODk1MzgzPFwvYT4gLSA8c3BhbiB0aXRsZT1cIlRoZSBzY29yZSBpcyBhIG1lYXN1cmVtZW50IG9mIHJlbGV2YW5jeSAoc2VlIFRGLUlERiBhbGdvcml0aG0pLiBUaGUgdmFsdWUgaXMgbm90IGFic29sdXRlIGFuZCBvbmx5IHN1aXRhYmxlIHRvIGNvbXBhcmUgaGl0cyBmcm9tIHRoZSBzYW1lIHJlc3VsdCBzZXQuXCI+U2NvcmU6IDE5LjQ0PFwvc3Bhbj48XC9kaXY+PFwvbGk+In1dLCJmYWNldHMiOm51bGwsIm1heFNjb3JlIjoyMS4xMTg4MzQsIm9mZnNldCI6MCwicXVlcnlJZGVudGlmaWVyIjoiNmZmNTU5ZTktNDhiOS0zOTY5LWJmZjktYzQ0ODFhMjAwNWFkIiwic2Vzc2lvbiI6ImIyYmN0cW4yY3NuNTd2ajcycTlxbDZpa2E2IiwidGltZUluRGF0YWJhc2UiOjE1LCJ0b3RhbENvdW50IjoxNzYxMzcsImh0bWxTdW1tYXJ5IjoiPHN0cm9uZz4xNzYxMzcgZGF0YXNldHM8XC9zdHJvbmc+IGZvdW5kIG9uIHNlYXJjaCBmb3IgPHN0cm9uZyB0aXRsZT1cIlF1ZXJ5OiAmcmFxdW87d2F0ZXImbGFxdW87XCI+JnJhcXVvO3dhdGVyJmxhcXVvOzxcL3N0cm9uZz4iLCJodG1sU25pcHBldFJTUyI6IjxsaW5rIHJlbD1cImFsdGVybmF0ZVwiIHRpdGxlPVwiUEFOR0FFQSBsYXRlc3QgZGF0YXNldHMgYWJvdXQgJnF1b3Q7d2F0ZXImcXVvdDtcIiB0eXBlPVwiYXBwbGljYXRpb25cL3Jzcyt4bWxcIiBocmVmPVwiXC90b29sc1wvbGF0ZXN0LWRhdGFzZXRzLnJzcz9xPXdhdGVyJmFtcDtjb3VudD0yXCI+In0=
  recorded_at: 2019-09-11 20:33:07 GMT
  recorded_with: vcr/0.3.0.9100, webmockr/0.4.0
- request:
    method: get
    uri: https://www.pangaea.de/advanced/search.php?t=Oceans&count=10&offset=0&q=water
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/4.0 crul/0.8.4.9100
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      cache-control: private, max-age=10800, pre-check=10800
      content-encoding: gzip
      content-type: application/json; charset=UTF-8
      date: Wed, 11 Sep 2019 20:33:05 GMT
      last-modified: Fri, 15 Apr 2016 11:55:50 GMT
      server: PANGAEA/2.0
      status: 'HTTP/2 200 '
      strict-transport-security: max-age=31536000
      vary:
      - Accept-Encoding
      - Cookie, X-PanLoginID
      x-content-type-options: nosniff
      x-frame-options: SAMEORIGIN
      x-ua-compatible: IE=Edge
    body:
      encoding: ASCII-8BIT
      string: 
  recorded_at: 2019-09-11 20:33:07 GMT
  recorded_with: vcr/0.3.0.9100, webmockr/0.4.0
- request:
    method: get
    uri: https://www.pangaea.de/advanced/search.php?count=10&offset=0&q=water&mindate=2013-06-01&maxdate=2013-07-01
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/4.0 crul/0.8.4.9100
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      cache-control: private, max-age=10800, pre-check=10800
      content-encoding: gzip
      content-type: application/json; charset=UTF-8
      date: Wed, 11 Sep 2019 20:33:06 GMT
      last-modified: Fri, 15 Apr 2016 11:55:50 GMT
      server: PANGAEA/2.0
      status: 'HTTP/2 200 '
      strict-transport-security: max-age=31536000
      vary:
      - Accept-Encoding
      - Cookie, X-PanLoginID
      x-content-type-options: nosniff
      x-frame-options: SAMEORIGIN
      x-ua-compatible: IE=Edge
    body:
      encoding: ASCII-8BIT
      string: 
  recorded_at: 2019-09-11 20:33:07 GMT
  recorded_with: vcr/0.3.0.9100, webmockr/0.4.0
- request:
    method: get
    uri: https://www.pangaea.de/advanced/search.php?count=10&offset=0&q=water&minlon=-124.2&minlat=41.8&maxlon=-116.8&maxlat=46.1
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/4.0 crul/0.8.4.9100
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      cache-control: private, max-age=10800, pre-check=10800
      content-encoding: gzip
      content-type: application/json; charset=UTF-8
      date: Wed, 11 Sep 2019 20:33:06 GMT
      last-modified: Fri, 15 Apr 2016 11:55:50 GMT
      server: PANGAEA/2.0
      status: 'HTTP/2 200 '
      strict-transport-security: max-age=31536000
      vary:
      - Accept-Encoding
      - Cookie, X-PanLoginID
      x-content-type-options: nosniff
      x-frame-options: SAMEORIGIN
      x-ua-compatible: IE=Edge
    body:
      encoding: ASCII-8BIT
      string: 
  recorded_at: 2019-09-11 20:33:07 GMT
  recorded_with: vcr/0.3.0.9100, webmockr/0.4.0
- request:
    method: get
    uri: https://www.pangaea.de/advanced/search.php?count=10&offset=0&q=citation%3AArcher
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/4.0 crul/0.8.4.9100
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      cache-control: private, max-age=10800, pre-check=10800
      content-encoding: gzip
      content-type: application/json; charset=UTF-8
      date: Wed, 11 Sep 2019 20:33:07 GMT
      last-modified: Fri, 15 Apr 2016 11:55:50 GMT
      server: PANGAEA/2.0
      status: 'HTTP/2 200 '
      strict-transport-security: max-age=31536000
      vary:
      - Accept-Encoding
      - Cookie, X-PanLoginID
      x-content-type-options: nosniff
      x-frame-options: SAMEORIGIN
      x-ua-compatible: IE=Edge
    body:
      encoding: ASCII-8BIT
      string: eyJyZXN1bHRzIjpbeyJVUkkiOiJkb2k6MTAuMTU5NFwvUEFOR0FFQS43MTUwNTEiLCJzY29yZSI6MjAuMTg5MjAzLCJodG1sIjoiPGxpPjxkaXYgY2xhc3M9XCJjaXRhdGlvblwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuNzE1MDUxXCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGlua1wiPjxzdHJvbmc+U3RvbGwsIEhNOyBTaGltaXp1LCBOOyBBcmNoZXIsIERFIGV0IGFsLiAoMjAwNyk6PFwvc3Ryb25nPiBTclwvQ2EgcmF0aW9zIG9mIGNvY2NvbGl0aHMgZnJvbSB0aGUgUGFsZW9jZW5lLUVvY2VuZSBUaGVybWFsIE1heGltdW08XC9hPjxcL2Rpdj48dGFibGUgY2xhc3M9XCJyZXN1bHRcIiBzdW1tYXJ5PVwiRGF0YXNldCByZWZlcmVuY2UgYW5kIHNpemVcIiBjZWxsc3BhY2luZz1cIjBcIiBjZWxscGFkZGluZz1cIjBcIj48dHI+PHRkIGNsYXNzPVwidGl0bGVcIj5TdXBwbGVtZW50IHRvOjxcL3RkPjx0ZCBjbGFzcz1cImNvbnRlbnRcIj48c3Ryb25nPlN0b2xsLCBITTsgU2hpbWl6dSwgTjsgQXJjaGVyLCBERSBldCBhbC4gKDIwMDcpOjxcL3N0cm9uZz4gQ29jY29saXRob3Bob3JlIHByb2R1Y3Rpdml0eSByZXNwb25zZSB0byBncmVlbmhvdXNlIGV2ZW50IG9mIHRoZSBQYWxlb2NlbmUtRW9jZW5lIFRoZXJtYWwgTWF4aW11bS4gPGVtPkVhcnRoIGFuZCBQbGFuZXRhcnkgU2NpZW5jZSBMZXR0ZXJzPFwvZW0+PFwvdGQ+PFwvdHI+PHRyPjx0ZCBjbGFzcz1cInRpdGxlXCI+U2l6ZTo8XC90ZD48dGQgY2xhc3M9XCJjb250ZW50XCI+NSBkYXRhc2V0czxcL3RkPjxcL3RyPjxcL3RhYmxlPjxkaXYgY2xhc3M9XCJkYXRhc2V0aWRcIj48YSBocmVmPVwiaHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjcxNTA1MVwiIHRhcmdldD1cIl9zZWxmXCIgY2xhc3M9XCJkYXRhc2V0LWxpbmsgZG9pLWxpbmtcIj5odHRwczpcL1wvZG9pLm9yZ1wvMTAuMTU5NFwvUEFOR0FFQS43MTUwNTE8XC9hPiAtIDxzcGFuIHRpdGxlPVwiVGhlIHNjb3JlIGlzIGEgbWVhc3VyZW1lbnQgb2YgcmVsZXZhbmN5IChzZWUgVEYtSURGIGFsZ29yaXRobSkuIFRoZSB2YWx1ZSBpcyBub3QgYWJzb2x1dGUgYW5kIG9ubHkgc3VpdGFibGUgdG8gY29tcGFyZSBoaXRzIGZyb20gdGhlIHNhbWUgcmVzdWx0IHNldC5cIj5TY29yZTogMjAuMTk8XC9zcGFuPjxcL2Rpdj48XC9saT4ifSx7IlVSSSI6ImRvaToxMC4xNTk0XC9QQU5HQUVBLjcyNjM2NCIsInNjb3JlIjoyMC4xODkyMDMsImh0bWwiOiI8bGk+PGRpdiBjbGFzcz1cImNpdGF0aW9uXCI+PGEgaHJlZj1cImh0dHBzOlwvXC9kb2kucGFuZ2FlYS5kZVwvMTAuMTU5NFwvUEFOR0FFQS43MjYzNjRcIiB0YXJnZXQ9XCJfc2VsZlwiIGNsYXNzPVwiZGF0YXNldC1saW5rXCI+PHN0cm9uZz5DYXR1YmlnLCBOUjsgQXJjaGVyLCBERTsgRnJhbmNvaXMsIFIgZXQgYWwuICgxOTk4KTo8XC9zdHJvbmc+IENhbGNpdW0gY2FyYm9uYXRlIGdsb2JhbCBMR00gQnVyaWFsIHJhdGUgZGF0YTxcL2E+PFwvZGl2Pjx0YWJsZSBjbGFzcz1cInJlc3VsdFwiIHN1bW1hcnk9XCJEYXRhc2V0IHJlZmVyZW5jZSBhbmQgc2l6ZVwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlN1cHBsZW1lbnQgdG86PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjxzdHJvbmc+Q2F0dWJpZywgTlI7IEFyY2hlciwgREU7IEZyYW5jb2lzLCBSIGV0IGFsLiAoMTk5OCk6PFwvc3Ryb25nPiBHbG9iYWwgZGVlcC1zZWEgYnVyaWFsIHJhdGUgb2YgY2FsY2l1bSBjYXJib25hdGUgZHVyaW5nIHRoZSBsYXN0IGdsYWNpYWwgbWF4aW11bS4gPGVtPlBhbGVvY2Vhbm9ncmFwaHk8XC9lbT48XC90ZD48XC90cj48dHI+PHRkIGNsYXNzPVwidGl0bGVcIj5TaXplOjxcL3RkPjx0ZCBjbGFzcz1cImNvbnRlbnRcIj40IGRhdGFzZXRzPFwvdGQ+PFwvdHI+PFwvdGFibGU+PGRpdiBjbGFzcz1cImRhdGFzZXRpZFwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuNzI2MzY0XCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGluayBkb2ktbGlua1wiPmh0dHBzOlwvXC9kb2kub3JnXC8xMC4xNTk0XC9QQU5HQUVBLjcyNjM2NDxcL2E+IC0gPHNwYW4gdGl0bGU9XCJUaGUgc2NvcmUgaXMgYSBtZWFzdXJlbWVudCBvZiByZWxldmFuY3kgKHNlZSBURi1JREYgYWxnb3JpdGhtKS4gVGhlIHZhbHVlIGlzIG5vdCBhYnNvbHV0ZSBhbmQgb25seSBzdWl0YWJsZSB0byBjb21wYXJlIGhpdHMgZnJvbSB0aGUgc2FtZSByZXN1bHQgc2V0LlwiPlNjb3JlOiAyMC4xOTxcL3NwYW4+PFwvZGl2PjxcL2xpPiJ9LHsiVVJJIjoiZG9pOjEwLjE1OTRcL1BBTkdBRUEuNzMwNTI3Iiwic2NvcmUiOjE5LjUzODI1LCJodG1sIjoiPGxpPjxkaXYgY2xhc3M9XCJjaXRhdGlvblwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuNzMwNTI3XCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGlua1wiPjxzdHJvbmc+SmFobmtlLCBSQTsgRW1lcnNvbiwgU1I7IFJlaW1lcnMsIEMgZXQgYWwuICgxOTg5KTo8XC9zdHJvbmc+IENoZW1pc3RyeSBvZiBlYXN0ZXJuIHRyb3BpY2FsIEF0bGFudGljIHBvcmV3YXRlcjxcL2E+PFwvZGl2Pjx0YWJsZSBjbGFzcz1cInJlc3VsdFwiIHN1bW1hcnk9XCJEYXRhc2V0IHJlZmVyZW5jZSBhbmQgc2l6ZVwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlN1cHBsZW1lbnQgdG86PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjxzdHJvbmc+SmFobmtlLCBSQTsgRW1lcnNvbiwgU1I7IFJlaW1lcnMsIEMgZXQgYWwuICgxOTg5KTo8XC9zdHJvbmc+IEJlbnRoaWMgcmVjeWNsaW5nIG9mIGJpb2dlbmljIGRlYnJpcyBpbiB0aGUgZWFzdGVybiB0cm9waWNhbCBBdGxhbnRpYyBPY2Vhbi4gPGVtPkdlb2NoaW1pY2EgZXQgQ29zbW9jaGltaWNhIEFjdGE8XC9lbT48XC90ZD48XC90cj48dHI+PHRkIGNsYXNzPVwidGl0bGVcIj5TaXplOjxcL3RkPjx0ZCBjbGFzcz1cImNvbnRlbnRcIj4yMSBkYXRhc2V0czxcL3RkPjxcL3RyPjxcL3RhYmxlPjxkaXYgY2xhc3M9XCJkYXRhc2V0aWRcIj48YSBocmVmPVwiaHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjczMDUyN1wiIHRhcmdldD1cIl9zZWxmXCIgY2xhc3M9XCJkYXRhc2V0LWxpbmsgZG9pLWxpbmtcIj5odHRwczpcL1wvZG9pLm9yZ1wvMTAuMTU5NFwvUEFOR0FFQS43MzA1Mjc8XC9hPiAtIDxzcGFuIHRpdGxlPVwiVGhlIHNjb3JlIGlzIGEgbWVhc3VyZW1lbnQgb2YgcmVsZXZhbmN5IChzZWUgVEYtSURGIGFsZ29yaXRobSkuIFRoZSB2YWx1ZSBpcyBub3QgYWJzb2x1dGUgYW5kIG9ubHkgc3VpdGFibGUgdG8gY29tcGFyZSBoaXRzIGZyb20gdGhlIHNhbWUgcmVzdWx0IHNldC5cIj5TY29yZTogMTkuNTQ8XC9zcGFuPjxcL2Rpdj48XC9saT4ifSx7IlVSSSI6ImRvaToxMC4xNTk0XC9QQU5HQUVBLjczNjAxMCIsInNjb3JlIjoxOS41MzgyNSwiaHRtbCI6IjxsaT48ZGl2IGNsYXNzPVwiY2l0YXRpb25cIj48YSBocmVmPVwiaHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjczNjAxMFwiIHRhcmdldD1cIl9zZWxmXCIgY2xhc3M9XCJkYXRhc2V0LWxpbmtcIj48c3Ryb25nPkFyY2hlciwgREU7IERldm9sLCBBSCAoMTk5Mik6PFwvc3Ryb25nPiBCZW50aGljIG94eWdlbiBmbGl4ZXMgb24gdGhlIFdhc2hpbmd0b24gc2hlbGYgYW5kIHNsb3BlPFwvYT48XC9kaXY+PHRhYmxlIGNsYXNzPVwicmVzdWx0XCIgc3VtbWFyeT1cIkRhdGFzZXQgcmVmZXJlbmNlIGFuZCBzaXplXCIgY2VsbHNwYWNpbmc9XCIwXCIgY2VsbHBhZGRpbmc9XCIwXCI+PHRyPjx0ZCBjbGFzcz1cInRpdGxlXCI+U3VwcGxlbWVudCB0bzo8XC90ZD48dGQgY2xhc3M9XCJjb250ZW50XCI+PHN0cm9uZz5BcmNoZXIsIERFOyBEZXZvbCwgQUggKDE5OTIpOjxcL3N0cm9uZz4gQmVudGhpYyBveHlnZW4gZmx1eGVzIG9uIHRoZSBXYXNoaW5ndG9uIHNoZWxmIGFuZCBzbG9wZTogQSBjb21wYXJpc29uIG9mIGluIHNpdHUgbWljcm9lbGVjdHJvZGUgYW5kIGNoYW1iZXIgZmx1eCBtZWFzdXJlbWVudHMuIDxlbT5MaW1ub2xvZ3kgYW5kIE9jZWFub2dyYXBoeTxcL2VtPjxcL3RkPjxcL3RyPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlNpemU6PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjkgZGF0YXNldHM8XC90ZD48XC90cj48XC90YWJsZT48ZGl2IGNsYXNzPVwiZGF0YXNldGlkXCI+PGEgaHJlZj1cImh0dHBzOlwvXC9kb2kucGFuZ2FlYS5kZVwvMTAuMTU5NFwvUEFOR0FFQS43MzYwMTBcIiB0YXJnZXQ9XCJfc2VsZlwiIGNsYXNzPVwiZGF0YXNldC1saW5rIGRvaS1saW5rXCI+aHR0cHM6XC9cL2RvaS5vcmdcLzEwLjE1OTRcL1BBTkdBRUEuNzM2MDEwPFwvYT4gLSA8c3BhbiB0aXRsZT1cIlRoZSBzY29yZSBpcyBhIG1lYXN1cmVtZW50IG9mIHJlbGV2YW5jeSAoc2VlIFRGLUlERiBhbGdvcml0aG0pLiBUaGUgdmFsdWUgaXMgbm90IGFic29sdXRlIGFuZCBvbmx5IHN1aXRhYmxlIHRvIGNvbXBhcmUgaGl0cyBmcm9tIHRoZSBzYW1lIHJlc3VsdCBzZXQuXCI+U2NvcmU6IDE5LjU0PFwvc3Bhbj48XC9kaXY+PFwvbGk+In0seyJVUkkiOiJkb2k6MTAuMTU5NFwvUEFOR0FFQS43MzA0MjAiLCJzY29yZSI6MTcuNjc4Mzk4LCJodG1sIjoiPGxpPjxkaXYgY2xhc3M9XCJjaXRhdGlvblwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuNzMwNDIwXCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGlua1wiPjxzdHJvbmc+SGFsZXMsIEI7IEVtZXJzb24sIFNSOyBBcmNoZXIsIERFICgxOTk0KTo8XC9zdHJvbmc+IFJlc3BpcmF0aW9uIGFuZCBkaXNzb2x1dGlvbiBpbiBzZWRpbWVudHMgb2YgdGhlIHdlc3Rlcm4gQXRsYW50aWM8XC9hPjxcL2Rpdj48dGFibGUgY2xhc3M9XCJyZXN1bHRcIiBzdW1tYXJ5PVwiRGF0YXNldCByZWZlcmVuY2UgYW5kIHNpemVcIiBjZWxsc3BhY2luZz1cIjBcIiBjZWxscGFkZGluZz1cIjBcIj48dHI+PHRkIGNsYXNzPVwidGl0bGVcIj5TdXBwbGVtZW50IHRvOjxcL3RkPjx0ZCBjbGFzcz1cImNvbnRlbnRcIj48c3Ryb25nPkhhbGVzLCBCOyBFbWVyc29uLCBTUjsgQXJjaGVyLCBERSAoMTk5NCk6PFwvc3Ryb25nPiBSZXNwaXJhdGlvbiBhbmQgZGlzc29sdXRpb24gaW4gdGhlIHNlZGltZW50cyBvZiB0aGUgd2VzdGVybiBOb3J0aCBBdGxhbnRpYzogZXN0aW1hdGVzIGZyb20gbW9kZWxzIG9mIGluIHNpdHUgbWljcm9lbGVjdHJvZGUgbWVhc3VyZW1lbnRzIG9mIHBvcmV3YXRlciBveHlnZW4gYW5kIHBILiA8ZW0+RGVlcCBTZWEgUmVzZWFyY2ggUGFydCBJOiBPY2Vhbm9ncmFwaGljIFJlc2VhcmNoIFBhcGVyczxcL2VtPjxcL3RkPjxcL3RyPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlNpemU6PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjMzIGRhdGFzZXRzPFwvdGQ+PFwvdHI+PFwvdGFibGU+PGRpdiBjbGFzcz1cImRhdGFzZXRpZFwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuNzMwNDIwXCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGluayBkb2ktbGlua1wiPmh0dHBzOlwvXC9kb2kub3JnXC8xMC4xNTk0XC9QQU5HQUVBLjczMDQyMDxcL2E+IC0gPHNwYW4gdGl0bGU9XCJUaGUgc2NvcmUgaXMgYSBtZWFzdXJlbWVudCBvZiByZWxldmFuY3kgKHNlZSBURi1JREYgYWxnb3JpdGhtKS4gVGhlIHZhbHVlIGlzIG5vdCBhYnNvbHV0ZSBhbmQgb25seSBzdWl0YWJsZSB0byBjb21wYXJlIGhpdHMgZnJvbSB0aGUgc2FtZSByZXN1bHQgc2V0LlwiPlNjb3JlOiAxNy42ODxcL3NwYW4+PFwvZGl2PjxcL2xpPiJ9LHsiVVJJIjoiZG9pOjEwLjE1OTRcL1BBTkdBRUEuMTIxMTMxIiwic2NvcmUiOjE1LjMxMjMyNTUsImh0bWwiOiI8bGk+PGRpdiBjbGFzcz1cImNpdGF0aW9uXCI+PGEgaHJlZj1cImh0dHBzOlwvXC9kb2kucGFuZ2FlYS5kZVwvMTAuMTU5NFwvUEFOR0FFQS4xMjExMzFcIiB0YXJnZXQ9XCJfc2VsZlwiIGNsYXNzPVwiZGF0YXNldC1saW5rXCI+PHN0cm9uZz5BcmNoZXIsIERFICgyMDAzKTo8XC9zdHJvbmc+IFRvdGFsIGNhcmJvbiBkaW94aWRlIGFuZCBhbGthbGluaXR5IGF0IHN0YXRpb24gVFQwMDdfOC1DVEQ5NTxcL2E+PFwvZGl2Pjx0YWJsZSBjbGFzcz1cInJlc3VsdFwiIHN1bW1hcnk9XCJEYXRhc2V0IHJlZmVyZW5jZSBhbmQgc2l6ZVwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlJlbGF0ZWQgdG86PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjxzdHJvbmc+QXJjaGVyLCBERSAoMjAwMyk6PFwvc3Ryb25nPiBUb3RhbCBjYXJib24gZGlveGlkZSBhbmQgYWxrYWxpbml0eS4gPGVtPlVuaXRlZCBTdGF0ZXMgSkdPRlMgUHJvY2VzcyBTdHVkeSBEYXRhIDE5ODktMTk5ODsgQ0QtUk9NIHZvbHVtZSAxLCB2ZXJzaW9uIDIsIFdvb2RzIEhvbGUgT2NlYW5vZ3JhcGhpYyBJbnN0aXR1dGlvbiwgVVNBOiBVLlMuIEpHT0ZTIERhdGEgTWFuYWdlbWVudCBPZmZpY2U8XC9lbT48XC90ZD48XC90cj48dHI+PHRkIGNsYXNzPVwidGl0bGVcIj5TaXplOjxcL3RkPjx0ZCBjbGFzcz1cImNvbnRlbnRcIj40NCBkYXRhIHBvaW50czxcL3RkPjxcL3RyPjxcL3RhYmxlPjxkaXYgY2xhc3M9XCJkYXRhc2V0aWRcIj48YSBocmVmPVwiaHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjEyMTEzMVwiIHRhcmdldD1cIl9zZWxmXCIgY2xhc3M9XCJkYXRhc2V0LWxpbmsgZG9pLWxpbmtcIj5odHRwczpcL1wvZG9pLm9yZ1wvMTAuMTU5NFwvUEFOR0FFQS4xMjExMzE8XC9hPiAtIDxzcGFuIHRpdGxlPVwiVGhlIHNjb3JlIGlzIGEgbWVhc3VyZW1lbnQgb2YgcmVsZXZhbmN5IChzZWUgVEYtSURGIGFsZ29yaXRobSkuIFRoZSB2YWx1ZSBpcyBub3QgYWJzb2x1dGUgYW5kIG9ubHkgc3VpdGFibGUgdG8gY29tcGFyZSBoaXRzIGZyb20gdGhlIHNhbWUgcmVzdWx0IHNldC5cIj5TY29yZTogMTUuMzE8XC9zcGFuPjxcL2Rpdj48XC9saT4ifSx7IlVSSSI6ImRvaToxMC4xNTk0XC9QQU5HQUVBLjEwNzI4NiIsInNjb3JlIjoxNS4zMTIzMjU1LCJodG1sIjoiPGxpPjxkaXYgY2xhc3M9XCJjaXRhdGlvblwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuMTA3Mjg2XCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGlua1wiPjxzdHJvbmc+QXJjaGVyLCBERSAoMjAwMyk6PFwvc3Ryb25nPiBJbnRlcnBvbGF0ZWQgY2FsY2l1bSBjYXJib25hdGUgY29udGVudCBvZiB0aGUgc2VhIGZsb29yIHNlZGltZW50czxcL2E+PFwvZGl2Pjx0YWJsZSBjbGFzcz1cInJlc3VsdFwiIHN1bW1hcnk9XCJEYXRhc2V0IHJlZmVyZW5jZSBhbmQgc2l6ZVwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlJlbGF0ZWQgdG86PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjxzdHJvbmc+QXJjaGVyLCBERSAoMTk5Nik6PFwvc3Ryb25nPiBBbiBhdGxhcyBvZiB0aGUgZGlzdHJpYnV0aW9uIG9mIGNhbGNpdW0gY2FyYm9uYXRlIGluIHNlZGltZW50cyBvZiB0aGUgZGVlcCBzZWEuIDxlbT5HbG9iYWwgQmlvZ2VvY2hlbWljYWwgQ3ljbGVzPFwvZW0+PFwvdGQ+PFwvdHI+PHRyPjx0ZCBjbGFzcz1cInRpdGxlXCI+U2l6ZTo8XC90ZD48dGQgY2xhc3M9XCJjb250ZW50XCI+MTE2LjAga0J5dGVzPFwvdGQ+PFwvdHI+PFwvdGFibGU+PGRpdiBjbGFzcz1cImRhdGFzZXRpZFwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuMTA3Mjg2XCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGluayBkb2ktbGlua1wiPmh0dHBzOlwvXC9kb2kub3JnXC8xMC4xNTk0XC9QQU5HQUVBLjEwNzI4NjxcL2E+IC0gPHNwYW4gdGl0bGU9XCJUaGUgc2NvcmUgaXMgYSBtZWFzdXJlbWVudCBvZiByZWxldmFuY3kgKHNlZSBURi1JREYgYWxnb3JpdGhtKS4gVGhlIHZhbHVlIGlzIG5vdCBhYnNvbHV0ZSBhbmQgb25seSBzdWl0YWJsZSB0byBjb21wYXJlIGhpdHMgZnJvbSB0aGUgc2FtZSByZXN1bHQgc2V0LlwiPlNjb3JlOiAxNS4zMTxcL3NwYW4+PFwvZGl2PjxcL2xpPiJ9LHsiVVJJIjoiZG9pOjEwLjE1OTRcL1BBTkdBRUEuMTIxMTYyIiwic2NvcmUiOjE1LjMxMjMyNTUsImh0bWwiOiI8bGk+PGRpdiBjbGFzcz1cImNpdGF0aW9uXCI+PGEgaHJlZj1cImh0dHBzOlwvXC9kb2kucGFuZ2FlYS5kZVwvMTAuMTU5NFwvUEFOR0FFQS4xMjExNjJcIiB0YXJnZXQ9XCJfc2VsZlwiIGNsYXNzPVwiZGF0YXNldC1saW5rXCI+PHN0cm9uZz5BcmNoZXIsIERFICgyMDAzKTo8XC9zdHJvbmc+IFRvdGFsIGNhcmJvbiBkaW94aWRlIGFuZCBhbGthbGluaXR5IGF0IHN0YXRpb24gVFQwMTFfMTItQ1REMTQ2PFwvYT48XC9kaXY+PHRhYmxlIGNsYXNzPVwicmVzdWx0XCIgc3VtbWFyeT1cIkRhdGFzZXQgcmVmZXJlbmNlIGFuZCBzaXplXCIgY2VsbHNwYWNpbmc9XCIwXCIgY2VsbHBhZGRpbmc9XCIwXCI+PHRyPjx0ZCBjbGFzcz1cInRpdGxlXCI+UmVsYXRlZCB0bzo8XC90ZD48dGQgY2xhc3M9XCJjb250ZW50XCI+PHN0cm9uZz5BcmNoZXIsIERFICgyMDAzKTo8XC9zdHJvbmc+IFRvdGFsIGNhcmJvbiBkaW94aWRlIGFuZCBhbGthbGluaXR5LiA8ZW0+VW5pdGVkIFN0YXRlcyBKR09GUyBQcm9jZXNzIFN0dWR5IERhdGEgMTk4OS0xOTk4OyBDRC1ST00gdm9sdW1lIDEsIHZlcnNpb24gMiwgV29vZHMgSG9sZSBPY2Vhbm9ncmFwaGljIEluc3RpdHV0aW9uLCBVU0E6IFUuUy4gSkdPRlMgRGF0YSBNYW5hZ2VtZW50IE9mZmljZTxcL2VtPjxcL3RkPjxcL3RyPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlNpemU6PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjgwIGRhdGEgcG9pbnRzPFwvdGQ+PFwvdHI+PFwvdGFibGU+PGRpdiBjbGFzcz1cImRhdGFzZXRpZFwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuMTIxMTYyXCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGluayBkb2ktbGlua1wiPmh0dHBzOlwvXC9kb2kub3JnXC8xMC4xNTk0XC9QQU5HQUVBLjEyMTE2MjxcL2E+IC0gPHNwYW4gdGl0bGU9XCJUaGUgc2NvcmUgaXMgYSBtZWFzdXJlbWVudCBvZiByZWxldmFuY3kgKHNlZSBURi1JREYgYWxnb3JpdGhtKS4gVGhlIHZhbHVlIGlzIG5vdCBhYnNvbHV0ZSBhbmQgb25seSBzdWl0YWJsZSB0byBjb21wYXJlIGhpdHMgZnJvbSB0aGUgc2FtZSByZXN1bHQgc2V0LlwiPlNjb3JlOiAxNS4zMTxcL3NwYW4+PFwvZGl2PjxcL2xpPiJ9LHsiVVJJIjoiZG9pOjEwLjE1OTRcL1BBTkdBRUEuMTIxMTg0Iiwic2NvcmUiOjE1LjMxMjMyNTUsImh0bWwiOiI8bGk+PGRpdiBjbGFzcz1cImNpdGF0aW9uXCI+PGEgaHJlZj1cImh0dHBzOlwvXC9kb2kucGFuZ2FlYS5kZVwvMTAuMTU5NFwvUEFOR0FFQS4xMjExODRcIiB0YXJnZXQ9XCJfc2VsZlwiIGNsYXNzPVwiZGF0YXNldC1saW5rXCI+PHN0cm9uZz5BcmNoZXIsIERFICgyMDAzKTo8XC9zdHJvbmc+IFRvdGFsIGNhcmJvbiBkaW94aWRlIGFuZCBhbGthbGluaXR5IGF0IHN0YXRpb24gVFQwMTFfMi1DVEQyMzxcL2E+PFwvZGl2Pjx0YWJsZSBjbGFzcz1cInJlc3VsdFwiIHN1bW1hcnk9XCJEYXRhc2V0IHJlZmVyZW5jZSBhbmQgc2l6ZVwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlJlbGF0ZWQgdG86PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjxzdHJvbmc+QXJjaGVyLCBERSAoMjAwMyk6PFwvc3Ryb25nPiBUb3RhbCBjYXJib24gZGlveGlkZSBhbmQgYWxrYWxpbml0eS4gPGVtPlVuaXRlZCBTdGF0ZXMgSkdPRlMgUHJvY2VzcyBTdHVkeSBEYXRhIDE5ODktMTk5ODsgQ0QtUk9NIHZvbHVtZSAxLCB2ZXJzaW9uIDIsIFdvb2RzIEhvbGUgT2NlYW5vZ3JhcGhpYyBJbnN0aXR1dGlvbiwgVVNBOiBVLlMuIEpHT0ZTIERhdGEgTWFuYWdlbWVudCBPZmZpY2U8XC9lbT48XC90ZD48XC90cj48dHI+PHRkIGNsYXNzPVwidGl0bGVcIj5TaXplOjxcL3RkPjx0ZCBjbGFzcz1cImNvbnRlbnRcIj4yNCBkYXRhIHBvaW50czxcL3RkPjxcL3RyPjxcL3RhYmxlPjxkaXYgY2xhc3M9XCJkYXRhc2V0aWRcIj48YSBocmVmPVwiaHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjEyMTE4NFwiIHRhcmdldD1cIl9zZWxmXCIgY2xhc3M9XCJkYXRhc2V0LWxpbmsgZG9pLWxpbmtcIj5odHRwczpcL1wvZG9pLm9yZ1wvMTAuMTU5NFwvUEFOR0FFQS4xMjExODQ8XC9hPiAtIDxzcGFuIHRpdGxlPVwiVGhlIHNjb3JlIGlzIGEgbWVhc3VyZW1lbnQgb2YgcmVsZXZhbmN5IChzZWUgVEYtSURGIGFsZ29yaXRobSkuIFRoZSB2YWx1ZSBpcyBub3QgYWJzb2x1dGUgYW5kIG9ubHkgc3VpdGFibGUgdG8gY29tcGFyZSBoaXRzIGZyb20gdGhlIHNhbWUgcmVzdWx0IHNldC5cIj5TY29yZTogMTUuMzE8XC9zcGFuPjxcL2Rpdj48XC9saT4ifSx7IlVSSSI6ImRvaToxMC4xNTk0XC9QQU5HQUVBLjEyMTIyOCIsInNjb3JlIjoxNS4zMTIzMjU1LCJodG1sIjoiPGxpPjxkaXYgY2xhc3M9XCJjaXRhdGlvblwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuMTIxMjI4XCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGlua1wiPjxzdHJvbmc+QXJjaGVyLCBERSAoMjAwMyk6PFwvc3Ryb25nPiBUb3RhbCBjYXJib24gZGlveGlkZSBhbmQgYWxrYWxpbml0eSBhdCBzdGF0aW9uIFRUMDExXzgtQ1REOTM8XC9hPjxcL2Rpdj48dGFibGUgY2xhc3M9XCJyZXN1bHRcIiBzdW1tYXJ5PVwiRGF0YXNldCByZWZlcmVuY2UgYW5kIHNpemVcIiBjZWxsc3BhY2luZz1cIjBcIiBjZWxscGFkZGluZz1cIjBcIj48dHI+PHRkIGNsYXNzPVwidGl0bGVcIj5SZWxhdGVkIHRvOjxcL3RkPjx0ZCBjbGFzcz1cImNvbnRlbnRcIj48c3Ryb25nPkFyY2hlciwgREUgKDIwMDMpOjxcL3N0cm9uZz4gVG90YWwgY2FyYm9uIGRpb3hpZGUgYW5kIGFsa2FsaW5pdHkuIDxlbT5Vbml0ZWQgU3RhdGVzIEpHT0ZTIFByb2Nlc3MgU3R1ZHkgRGF0YSAxOTg5LTE5OTg7IENELVJPTSB2b2x1bWUgMSwgdmVyc2lvbiAyLCBXb29kcyBIb2xlIE9jZWFub2dyYXBoaWMgSW5zdGl0dXRpb24sIFVTQTogVS5TLiBKR09GUyBEYXRhIE1hbmFnZW1lbnQgT2ZmaWNlPFwvZW0+PFwvdGQ+PFwvdHI+PHRyPjx0ZCBjbGFzcz1cInRpdGxlXCI+U2l6ZTo8XC90ZD48dGQgY2xhc3M9XCJjb250ZW50XCI+NDQgZGF0YSBwb2ludHM8XC90ZD48XC90cj48XC90YWJsZT48ZGl2IGNsYXNzPVwiZGF0YXNldGlkXCI+PGEgaHJlZj1cImh0dHBzOlwvXC9kb2kucGFuZ2FlYS5kZVwvMTAuMTU5NFwvUEFOR0FFQS4xMjEyMjhcIiB0YXJnZXQ9XCJfc2VsZlwiIGNsYXNzPVwiZGF0YXNldC1saW5rIGRvaS1saW5rXCI+aHR0cHM6XC9cL2RvaS5vcmdcLzEwLjE1OTRcL1BBTkdBRUEuMTIxMjI4PFwvYT4gLSA8c3BhbiB0aXRsZT1cIlRoZSBzY29yZSBpcyBhIG1lYXN1cmVtZW50IG9mIHJlbGV2YW5jeSAoc2VlIFRGLUlERiBhbGdvcml0aG0pLiBUaGUgdmFsdWUgaXMgbm90IGFic29sdXRlIGFuZCBvbmx5IHN1aXRhYmxlIHRvIGNvbXBhcmUgaGl0cyBmcm9tIHRoZSBzYW1lIHJlc3VsdCBzZXQuXCI+U2NvcmU6IDE1LjMxPFwvc3Bhbj48XC9kaXY+PFwvbGk+In1dLCJmYWNldHMiOm51bGwsIm1heFNjb3JlIjoyMC4xODkyMDMsIm9mZnNldCI6MCwicXVlcnlJZGVudGlmaWVyIjoiMzk0YTRiNWItZTliNS0zYzUxLWFlMTEtZDU5MDZkYWY5ZWUyIiwic2Vzc2lvbiI6ImtjMzhtZDkycDFpMG9tMXNpdWNiaTJ1Mm0xIiwidGltZUluRGF0YWJhc2UiOjQsInRvdGFsQ291bnQiOjI3NCwiaHRtbFN1bW1hcnkiOiI8c3Ryb25nPjI3NCBkYXRhc2V0czxcL3N0cm9uZz4gZm91bmQgb24gc2VhcmNoIGZvciA8c3Ryb25nIHRpdGxlPVwiUXVlcnk6ICZyYXF1bztjaXRhdGlvbjpBcmNoZXImbGFxdW87XCI+JnJhcXVvO2NpdGF0aW9uOkFyY2hlciZsYXF1bzs8XC9zdHJvbmc+IiwiaHRtbFNuaXBwZXRSU1MiOiI8bGluayByZWw9XCJhbHRlcm5hdGVcIiB0aXRsZT1cIlBBTkdBRUEgbGF0ZXN0IGRhdGFzZXRzIGFib3V0ICZxdW90O2NpdGF0aW9uOkFyY2hlciZxdW90O1wiIHR5cGU9XCJhcHBsaWNhdGlvblwvcnNzK3htbFwiIGhyZWY9XCJcL3Rvb2xzXC9sYXRlc3QtZGF0YXNldHMucnNzP3E9Y2l0YXRpb24lM0FBcmNoZXImYW1wO2NvdW50PTEwXCI+In0=
  recorded_at: 2019-09-11 20:33:07 GMT
  recorded_with: vcr/0.3.0.9100, webmockr/0.4.0
