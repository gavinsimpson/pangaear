http_interactions:
- request:
    method: get
    uri: https://www.pangaea.de/advanced/search.php?count=10&offset=0&q=water
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      cache-control: private, max-age=10800, pre-check=10800
      connection: keep-alive
      content-encoding: gzip
      content-type: application/json; charset=UTF-8
      date: Wed, 22 Jan 2020 17:17:53 GMT
      last-modified: Fri, 15 Apr 2016 11:55:50 GMT
      server: PANGAEA/2.0
      status: HTTP/1.1 200 OK
      strict-transport-security: max-age=31536000
      transfer-encoding: chunked
      vary:
      - Accept-Encoding
      - Cookie, X-PanLoginID, Authorization
      x-content-type-options: nosniff
      x-frame-options: SAMEORIGIN
      x-ua-compatible: IE=Edge
    body:
      encoding: ASCII-8BIT
      file: no
      string: 
  recorded_at: 2020-01-22 17:17:59 GMT
  recorded_with: vcr/0.4.0, webmockr/0.5.0
- request:
    method: get
    uri: https://www.pangaea.de/advanced/search.php?count=2&offset=0&q=water
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      cache-control: private, max-age=10800, pre-check=10800
      connection: keep-alive
      content-encoding: gzip
      content-type: application/json; charset=UTF-8
      date: Wed, 22 Jan 2020 17:17:54 GMT
      last-modified: Fri, 15 Apr 2016 11:55:50 GMT
      server: PANGAEA/2.0
      status: HTTP/1.1 200 OK
      strict-transport-security: max-age=31536000
      transfer-encoding: chunked
      vary:
      - Accept-Encoding
      - Cookie, X-PanLoginID, Authorization
      x-content-type-options: nosniff
      x-frame-options: SAMEORIGIN
      x-ua-compatible: IE=Edge
    body:
      encoding: ASCII-8BIT
      file: no
      string: eyJyZXN1bHRzIjpbeyJVUkkiOiJkb2k6MTAuMTU5NFwvUEFOR0FFQS44OTI4MTIiLCJzY29yZSI6MjAuNzMwNDQ4LCJodG1sIjoiPGxpPjxkaXYgY2xhc3M9XCJjaXRhdGlvblwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuODkyODEyXCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGlua1wiPjxzdHJvbmc+UXVhZGUsIE07IEJyw7xnZ2VtYW5uLCBOOyBHcmFmLCBBIGV0IGFsLiAoMjAxOCk6PFwvc3Ryb25nPiBEYXRhIGZvciBraW5ldGljIGlzb3RvcGljIGZyYWN0aW9uYXRpb24gb2Ygd2F0ZXIgZHVyaW5nIGJhcmUgc29pbCBldmFwb3JhdGlvbjxcL2E+PFwvZGl2Pjx0YWJsZSBjbGFzcz1cInJlc3VsdFwiIHN1bW1hcnk9XCJEYXRhc2V0IHJlZmVyZW5jZSBhbmQgc2l6ZVwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlN1cHBsZW1lbnQgdG86PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjxzdHJvbmc+UXVhZGUsIE07IEJyw7xnZ2VtYW5uLCBOOyBHcmFmLCBBIGV0IGFsLiAoMjAxOCk6PFwvc3Ryb25nPiBJbnZlc3RpZ2F0aW9uIG9mIEtpbmV0aWMgSXNvdG9waWMgRnJhY3Rpb25hdGlvbiBvZiBXYXRlciBkdXJpbmcgQmFyZSBTb2lsIEV2YXBvcmF0aW9uLiA8ZW0+V2F0ZXIgUmVzb3VyY2VzIFJlc2VhcmNoPFwvZW0+PFwvdGQ+PFwvdHI+PHRyPjx0ZCBjbGFzcz1cInRpdGxlXCI+U2l6ZTo8XC90ZD48dGQgY2xhc3M9XCJjb250ZW50XCI+NSBkYXRhc2V0czxcL3RkPjxcL3RyPjxcL3RhYmxlPjxkaXYgY2xhc3M9XCJkYXRhc2V0aWRcIj48YSBocmVmPVwiaHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjg5MjgxMlwiIHRhcmdldD1cIl9zZWxmXCIgY2xhc3M9XCJkYXRhc2V0LWxpbmsgZG9pLWxpbmtcIj5odHRwczpcL1wvZG9pLm9yZ1wvMTAuMTU5NFwvUEFOR0FFQS44OTI4MTI8XC9hPiAtIDxzcGFuIHRpdGxlPVwiVGhlIHNjb3JlIGlzIGEgbWVhc3VyZW1lbnQgb2YgcmVsZXZhbmN5IChzZWUgVEYtSURGIGFsZ29yaXRobSkuIFRoZSB2YWx1ZSBpcyBub3QgYWJzb2x1dGUgYW5kIG9ubHkgc3VpdGFibGUgdG8gY29tcGFyZSBoaXRzIGZyb20gdGhlIHNhbWUgcmVzdWx0IHNldC5cIj5TY29yZTogMjAuNzM8XC9zcGFuPjxcL2Rpdj48XC9saT4ifSx7IlVSSSI6ImRvaToxMC4xNTk0XC9QQU5HQUVBLjkwODIxNSIsInNjb3JlIjoxOS45Mzk5MiwiaHRtbCI6IjxsaT48ZGl2IGNsYXNzPVwiY2l0YXRpb25cIj48YSBocmVmPVwiaHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjkwODIxNVwiIHRhcmdldD1cIl9zZWxmXCIgY2xhc3M9XCJkYXRhc2V0LWxpbmtcIj48c3Ryb25nPkNvYmIsIEFSOyBIYXJ2ZXksIENGICgyMDE5KTo8XC9zdHJvbmc+IEh5ZHJvbG9naWMgZGF0YSBmcm9tIE1lbmRhcmFtIHBlYXQgc3dhbXAgKDIwMTItMyk8XC9hPjxcL2Rpdj48dGFibGUgY2xhc3M9XCJyZXN1bHRcIiBzdW1tYXJ5PVwiRGF0YXNldCByZWZlcmVuY2UgYW5kIHNpemVcIiBjZWxsc3BhY2luZz1cIjBcIiBjZWxscGFkZGluZz1cIjBcIj48dHI+PHRkIGNsYXNzPVwidGl0bGVcIj5TdXBwbGVtZW50IHRvOjxcL3RkPjx0ZCBjbGFzcz1cImNvbnRlbnRcIj48c3Ryb25nPkNvYmIsIEFSOyBIYXJ2ZXksIENGICgyMDE5KTo8XC9zdHJvbmc+IFNjYWxhciBTaW11bGF0aW9uIGFuZCBQYXJhbWV0ZXJpemF0aW9uIG9mIFdhdGVyIFRhYmxlIER5bmFtaWNzIGluIFRyb3BpY2FsIFBlYXRsYW5kcy4gPGVtPldhdGVyIFJlc291cmNlcyBSZXNlYXJjaDxcL2VtPjxcL3RkPjxcL3RyPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlNpemU6PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjggZGF0YXNldHM8XC90ZD48XC90cj48XC90YWJsZT48ZGl2IGNsYXNzPVwiZGF0YXNldGlkXCI+PGEgaHJlZj1cImh0dHBzOlwvXC9kb2kucGFuZ2FlYS5kZVwvMTAuMTU5NFwvUEFOR0FFQS45MDgyMTVcIiB0YXJnZXQ9XCJfc2VsZlwiIGNsYXNzPVwiZGF0YXNldC1saW5rIGRvaS1saW5rXCI+aHR0cHM6XC9cL2RvaS5vcmdcLzEwLjE1OTRcL1BBTkdBRUEuOTA4MjE1PFwvYT4gLSA8c3BhbiB0aXRsZT1cIlRoZSBzY29yZSBpcyBhIG1lYXN1cmVtZW50IG9mIHJlbGV2YW5jeSAoc2VlIFRGLUlERiBhbGdvcml0aG0pLiBUaGUgdmFsdWUgaXMgbm90IGFic29sdXRlIGFuZCBvbmx5IHN1aXRhYmxlIHRvIGNvbXBhcmUgaGl0cyBmcm9tIHRoZSBzYW1lIHJlc3VsdCBzZXQuXCI+U2NvcmU6IDE5Ljk0PFwvc3Bhbj48XC9kaXY+PFwvbGk+In1dLCJmYWNldHMiOm51bGwsIm1heFNjb3JlIjoyMC43MzA0NDgsIm9mZnNldCI6MCwicXVlcnlJZGVudGlmaWVyIjoiNmZmNTU5ZTktNDhiOS0zOTY5LWJmZjktYzQ0ODFhMjAwNWFkIiwic2Vzc2lvbiI6IjVnYXMwNmxmZXZhcWpmamQwY2FxbXE4MHI2IiwidGltZUluRGF0YWJhc2UiOjIyLCJ0b3RhbENvdW50IjoxNzc3NDgsImh0bWxTdW1tYXJ5IjoiPHN0cm9uZz4xNzc3NDggZGF0YXNldHM8XC9zdHJvbmc+IGZvdW5kIG9uIHNlYXJjaCBmb3IgPHN0cm9uZyB0aXRsZT1cIlF1ZXJ5OiAmcmFxdW87d2F0ZXImbGFxdW87XCI+JnJhcXVvO3dhdGVyJmxhcXVvOzxcL3N0cm9uZz4iLCJodG1sU25pcHBldFJTUyI6IjxsaW5rIHJlbD1cImFsdGVybmF0ZVwiIHRpdGxlPVwiUEFOR0FFQSBsYXRlc3QgZGF0YXNldHMgYWJvdXQgJnF1b3Q7d2F0ZXImcXVvdDtcIiB0eXBlPVwiYXBwbGljYXRpb25cL3Jzcyt4bWxcIiBocmVmPVwiXC90b29sc1wvbGF0ZXN0LWRhdGFzZXRzLnJzcz9xPXdhdGVyJmFtcDtjb3VudD0yXCI+In0=
  recorded_at: 2020-01-22 17:17:59 GMT
  recorded_with: vcr/0.4.0, webmockr/0.5.0
- request:
    method: get
    uri: https://www.pangaea.de/advanced/search.php?t=Oceans&count=10&offset=0&q=water
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      cache-control: private, max-age=10800, pre-check=10800
      connection: keep-alive
      content-encoding: gzip
      content-type: application/json; charset=UTF-8
      date: Wed, 22 Jan 2020 17:17:55 GMT
      last-modified: Fri, 15 Apr 2016 11:55:50 GMT
      server: PANGAEA/2.0
      status: HTTP/1.1 200 OK
      strict-transport-security: max-age=31536000
      transfer-encoding: chunked
      vary:
      - Accept-Encoding
      - Cookie, X-PanLoginID, Authorization
      x-content-type-options: nosniff
      x-frame-options: SAMEORIGIN
      x-ua-compatible: IE=Edge
    body:
      encoding: ASCII-8BIT
      file: no
      string: eyJyZXN1bHRzIjpbeyJVUkkiOiJkb2k6MTAuMTU5NFwvUEFOR0FFQS44ODI2MTMiLCJzY29yZSI6MTcuMjExMTI0LCJodG1sIjoiPGxpPjxkaXYgY2xhc3M9XCJjaXRhdGlvblwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuODgyNjEzXCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGlua1wiPjxzdHJvbmc+QW50aWNvLCBBOyBBZ3VpYXIsIFJPOyBBbXNsZXIsIE1MICgyMDE3KTo8XC9zdHJvbmc+IFBhcmFuw6EgUml2ZXIgaHlkcm9tZXRyaWMgZGF0YSBmcm9tIFJvc2FyaW8gQ2l0eSwgQXJnZW50aW5hOiAxODc1IHRvIDIwMTc8XC9hPjxcL2Rpdj48dGFibGUgY2xhc3M9XCJyZXN1bHRcIiBzdW1tYXJ5PVwiRGF0YXNldCByZWZlcmVuY2UgYW5kIHNpemVcIiBjZWxsc3BhY2luZz1cIjBcIiBjZWxscGFkZGluZz1cIjBcIj48dHI+PHRkIGNsYXNzPVwidGl0bGVcIj5TdXBwbGVtZW50IHRvOjxcL3RkPjx0ZCBjbGFzcz1cImNvbnRlbnRcIj48c3Ryb25nPkFudGljbywgQTsgQWd1aWFyLCBSTzsgQW1zbGVyLCBNTCAoMjAxOCk6PFwvc3Ryb25nPiBIeWRyb21ldHJpYyBkYXRhIHJlc2N1ZSBpbiB0aGUgUGFyYW7DoSBSaXZlciBCYXNpbi4gPGVtPldhdGVyIFJlc291cmNlcyBSZXNlYXJjaDxcL2VtPjxcL3RkPjxcL3RyPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlJlbGF0ZWQgdG86PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjxzdHJvbmc+QW50aWNvLCBBOyBNZW5kaXphYmFsLCBTOyBGZXJyZWlyYSwgTEogZXQgYWwuICgyMDE5KTo8XC9zdHJvbmc+IEltcHJvdmVkIFBhcmFuw6EgUml2ZXIgaHlkcm9tZXRyaWMgZGF0YSBmcm9tIDE4NzUgdG8gMTg4My48XC90ZD48XC90cj48dHI+PHRkIGNsYXNzPVwidGl0bGVcIj5TaXplOjxcL3RkPjx0ZCBjbGFzcz1cImNvbnRlbnRcIj4yIGRhdGFzZXRzPFwvdGQ+PFwvdHI+PFwvdGFibGU+PGRpdiBjbGFzcz1cImRhdGFzZXRpZFwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuODgyNjEzXCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGluayBkb2ktbGlua1wiPmh0dHBzOlwvXC9kb2kub3JnXC8xMC4xNTk0XC9QQU5HQUVBLjg4MjYxMzxcL2E+IC0gPHNwYW4gdGl0bGU9XCJUaGUgc2NvcmUgaXMgYSBtZWFzdXJlbWVudCBvZiByZWxldmFuY3kgKHNlZSBURi1JREYgYWxnb3JpdGhtKS4gVGhlIHZhbHVlIGlzIG5vdCBhYnNvbHV0ZSBhbmQgb25seSBzdWl0YWJsZSB0byBjb21wYXJlIGhpdHMgZnJvbSB0aGUgc2FtZSByZXN1bHQgc2V0LlwiPlNjb3JlOiAxNy4yMTxcL3NwYW4+PFwvZGl2PjxcL2xpPiJ9LHsiVVJJIjoiZG9pOjEwLjE1OTRcL1BBTkdBRUEuODczMDc1Iiwic2NvcmUiOjE3LjE5NzA1OCwiaHRtbCI6IjxsaT48ZGl2IGNsYXNzPVwiY2l0YXRpb25cIj48YSBocmVmPVwiaHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjg3MzA3NVwiIHRhcmdldD1cIl9zZWxmXCIgY2xhc3M9XCJkYXRhc2V0LWxpbmtcIj48c3Ryb25nPkFuYW5kLCBQOyBKdW5nLCBTICgyMDE3KTo8XC9zdHJvbmc+IEdlb2NoZW1pc3RyeSBvZiBhIHNlZGltZW50IHJlY29yZCBmcm9tIGludGVybWVkaWF0ZSB3YXRlciBvZmYgU29tYWxpYTxcL2E+PFwvZGl2Pjx0YWJsZSBjbGFzcz1cInJlc3VsdFwiIHN1bW1hcnk9XCJEYXRhc2V0IHJlZmVyZW5jZSBhbmQgc2l6ZVwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlN1cHBsZW1lbnQgdG86PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjxzdHJvbmc+QW5hbmQsIFA7IEp1bmcsIFM6PFwvc3Ryb25nPiBSZW1hcmthYmx5IHdhcm0gYW5kIHNhbGluZSBnbGFjaWFsIGludGVybWVkaWF0ZSB3YXRlciBvZmYgU29tYWxpYS4gPGVtPlBhbGVvY2Vhbm9ncmFwaHk8XC9lbT48XC90ZD48XC90cj48dHI+PHRkIGNsYXNzPVwidGl0bGVcIj5TaXplOjxcL3RkPjx0ZCBjbGFzcz1cImNvbnRlbnRcIj4yIGRhdGFzZXRzPFwvdGQ+PFwvdHI+PFwvdGFibGU+PGRpdiBjbGFzcz1cImRhdGFzZXRpZFwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuODczMDc1XCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGluayBkb2ktbGlua1wiPmh0dHBzOlwvXC9kb2kub3JnXC8xMC4xNTk0XC9QQU5HQUVBLjg3MzA3NTxcL2E+IC0gPHNwYW4gdGl0bGU9XCJUaGUgc2NvcmUgaXMgYSBtZWFzdXJlbWVudCBvZiByZWxldmFuY3kgKHNlZSBURi1JREYgYWxnb3JpdGhtKS4gVGhlIHZhbHVlIGlzIG5vdCBhYnNvbHV0ZSBhbmQgb25seSBzdWl0YWJsZSB0byBjb21wYXJlIGhpdHMgZnJvbSB0aGUgc2FtZSByZXN1bHQgc2V0LlwiPlNjb3JlOiAxNy4yPFwvc3Bhbj48XC9kaXY+PFwvbGk+In0seyJVUkkiOiJkb2k6MTAuMTU5NFwvUEFOR0FFQS45MDYwNTYiLCJzY29yZSI6MTYuNzE4NTU3LCJodG1sIjoiPGxpPjxkaXYgY2xhc3M9XCJjaXRhdGlvblwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuOTA2MDU2XCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGlua1wiPjxzdHJvbmc+QW50aWNvLCBBOyBNZW5kaXphYmFsLCBTOyBGZXJyZWlyYSwgTEogZXQgYWwuICgyMDE5KTo8XC9zdHJvbmc+IEltcHJvdmVkIFBhcmFuw6EgUml2ZXIgaHlkcm9tZXRyaWMgZGF0YSBmcm9tIDE4NzUgdG8gMTg4MzxcL2E+PFwvZGl2Pjx0YWJsZSBjbGFzcz1cInJlc3VsdFwiIHN1bW1hcnk9XCJEYXRhc2V0IHJlZmVyZW5jZSBhbmQgc2l6ZVwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlN1cHBsZW1lbnQgdG86PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjxzdHJvbmc+QW50aWNvLCBBOyBNZW5kaXphYmFsLCBTOyBGZXJyZWlyYSwgTEogZXQgYWwuOjxcL3N0cm9uZz4gQWRkZW5kdW0gdG8gXCJIeWRyb21ldHJpYyBEYXRhIFJlc2N1ZSBpbiB0aGUgUGFyYW7DoSBSaXZlciBCYXNpblwiIGJ5IEFuZHLDqXMgQW50aWNvLCBSaWNhcmRvIE8uIEFndWlhciwgYW5kIE1hcmlvIEwuIEFtc2xlci4gPGVtPldhdGVyIFJlc291cmNlcyBSZXNlYXJjaDxcL2VtPjxcL3RkPjxcL3RyPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlJlbGF0ZWQgdG86PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjxzdHJvbmc+QW50aWNvLCBBOyBBZ3VpYXIsIFJPOyBBbXNsZXIsIE1MICgyMDE3KTo8XC9zdHJvbmc+IFBhcmFuw6EgUml2ZXIgaHlkcm9tZXRyaWMgZGF0YSBmcm9tIFJvc2FyaW8gQ2l0eSwgQXJnZW50aW5hOiAxODc1IHRvIDIwMTcuPFwvdGQ+PFwvdHI+PHRyPjx0ZCBjbGFzcz1cInRpdGxlXCI+U2l6ZTo8XC90ZD48dGQgY2xhc3M9XCJjb250ZW50XCI+MiBkYXRhc2V0czxcL3RkPjxcL3RyPjxcL3RhYmxlPjxkaXYgY2xhc3M9XCJkYXRhc2V0aWRcIj48YSBocmVmPVwiaHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjkwNjA1NlwiIHRhcmdldD1cIl9zZWxmXCIgY2xhc3M9XCJkYXRhc2V0LWxpbmtcIj5odHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuOTA2MDU2PFwvYT4gLSA8c3BhbiB0aXRsZT1cIlRoZSBzY29yZSBpcyBhIG1lYXN1cmVtZW50IG9mIHJlbGV2YW5jeSAoc2VlIFRGLUlERiBhbGdvcml0aG0pLiBUaGUgdmFsdWUgaXMgbm90IGFic29sdXRlIGFuZCBvbmx5IHN1aXRhYmxlIHRvIGNvbXBhcmUgaGl0cyBmcm9tIHRoZSBzYW1lIHJlc3VsdCBzZXQuXCI+U2NvcmU6IDE2LjcyPFwvc3Bhbj48XC9kaXY+PFwvbGk+In0seyJVUkkiOiJkb2k6MTAuMTU5NFwvUEFOR0FFQS44NTczOTAiLCJzY29yZSI6MTYuNDEzNjA1LCJodG1sIjoiPGxpPjxkaXYgY2xhc3M9XCJjaXRhdGlvblwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuODU3MzkwXCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGlua1wiPjxzdHJvbmc+TWFydGluLCBQQTsgTGVhLCBEVyAoMTk5OCk6PFwvc3Ryb25nPiBUcmFjZSBlbGVtZW50cyBpbiBiZW50aGljIGZvcmFtaW5pZmVyYSBvZiBzZWRpbWVudCBjb3JlIFYzMC00OTxcL2E+PFwvZGl2Pjx0YWJsZSBjbGFzcz1cInJlc3VsdFwiIHN1bW1hcnk9XCJEYXRhc2V0IHJlZmVyZW5jZSBhbmQgc2l6ZVwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlN1cHBsZW1lbnQgdG86PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjxzdHJvbmc+TWFydGluLCBQQTsgTGVhLCBEVyAoMTk5OCk6PFwvc3Ryb25nPiBDb21wYXJpc29uIG9mIHdhdGVyIG1hc3MgY2hhbmdlcyBpbiB0aGUgZGVlcCB0cm9waWNhbCBBdGxhbnRpYyBkZXJpdmVkIGZyb20gQ2RcL0NhIGFuZCBjYXJib24gaXNvdG9wZSByZWNvcmRzOiBJbXBsaWNhdGlvbnMgZm9yIGNoYW5naW5nIEJhIGNvbXBvc2l0aW9uIG9mIERlZXAgQXRsYW50aWMgV2F0ZXIgTWFzc2VzLiA8ZW0+UGFsZW9jZWFub2dyYXBoeTxcL2VtPjxcL3RkPjxcL3RyPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlNpemU6PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjIgZGF0YXNldHM8XC90ZD48XC90cj48XC90YWJsZT48ZGl2IGNsYXNzPVwiZGF0YXNldGlkXCI+PGEgaHJlZj1cImh0dHBzOlwvXC9kb2kucGFuZ2FlYS5kZVwvMTAuMTU5NFwvUEFOR0FFQS44NTczOTBcIiB0YXJnZXQ9XCJfc2VsZlwiIGNsYXNzPVwiZGF0YXNldC1saW5rIGRvaS1saW5rXCI+aHR0cHM6XC9cL2RvaS5vcmdcLzEwLjE1OTRcL1BBTkdBRUEuODU3MzkwPFwvYT4gLSA8c3BhbiB0aXRsZT1cIlRoZSBzY29yZSBpcyBhIG1lYXN1cmVtZW50IG9mIHJlbGV2YW5jeSAoc2VlIFRGLUlERiBhbGdvcml0aG0pLiBUaGUgdmFsdWUgaXMgbm90IGFic29sdXRlIGFuZCBvbmx5IHN1aXRhYmxlIHRvIGNvbXBhcmUgaGl0cyBmcm9tIHRoZSBzYW1lIHJlc3VsdCBzZXQuXCI+U2NvcmU6IDE2LjQxPFwvc3Bhbj48XC9kaXY+PFwvbGk+In0seyJVUkkiOiJkb2k6MTAuMTU5NFwvUEFOR0FFQS43MzgyNzkiLCJzY29yZSI6MTYuMTc0MDA2LCJodG1sIjoiPGxpPjxkaXYgY2xhc3M9XCJjaXRhdGlvblwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuNzM4Mjc5XCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGlua1wiPjxzdHJvbmc+S2lyaWFrb3VsYWtpcywgSzsgRmlzaGVyLCBFOyBXb2xmZiwgR0EgZXQgYWwuICgyMDA1KTo8XC9zdHJvbmc+IExpcGlkcyBhbmQgbml0cm9nZW4gaXNvdG9wZXMgb2YgZGVlcC13YXRlciBjb3JhbHM8XC9hPjxcL2Rpdj48dGFibGUgY2xhc3M9XCJyZXN1bHRcIiBzdW1tYXJ5PVwiRGF0YXNldCByZWZlcmVuY2UgYW5kIHNpemVcIiBjZWxsc3BhY2luZz1cIjBcIiBjZWxscGFkZGluZz1cIjBcIj48dHI+PHRkIGNsYXNzPVwidGl0bGVcIj5TdXBwbGVtZW50IHRvOjxcL3RkPjx0ZCBjbGFzcz1cImNvbnRlbnRcIj48c3Ryb25nPktpcmlha291bGFraXMsIEs7IEZpc2hlciwgRTsgV29sZmYsIEdBIGV0IGFsLiAoMjAwNSk6PFwvc3Ryb25nPiBMaXBpZHMgYW5kIG5pdHJvZ2VuIGlzb3RvcGVzIG9mIHR3byBkZWVwLXdhdGVyIGNvcmFscyBmcm9tIHRoZSBOb3J0aC1FYXN0IEF0bGFudGljOiBpbml0aWFsIHJlc3VsdHMgYW5kIGltcGxpY2F0aW9ucyBmb3IgdGhlaXIgbnV0cml0aW9uLiA8ZW0+SW46IEZyZWl3YWxkLCBBICZhbXA7IFJvYmVydHMsIEpNIChlZHMuKSwgMjAwNSwgQ29sZC13YXRlciBDb3JhbHMgYW5kIEVjb3N5c3RlbXMsIFNwcmluZ2VyLVZlcmxhZywgQmVybGluLCBIZWlkZWxiZXJnPFwvZW0+PFwvdGQ+PFwvdHI+PHRyPjx0ZCBjbGFzcz1cInRpdGxlXCI+U2l6ZTo8XC90ZD48dGQgY2xhc3M9XCJjb250ZW50XCI+NCBkYXRhc2V0czxcL3RkPjxcL3RyPjxcL3RhYmxlPjxkaXYgY2xhc3M9XCJkYXRhc2V0aWRcIj48YSBocmVmPVwiaHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjczODI3OVwiIHRhcmdldD1cIl9zZWxmXCIgY2xhc3M9XCJkYXRhc2V0LWxpbmsgZG9pLWxpbmtcIj5odHRwczpcL1wvZG9pLm9yZ1wvMTAuMTU5NFwvUEFOR0FFQS43MzgyNzk8XC9hPiAtIDxzcGFuIHRpdGxlPVwiVGhlIHNjb3JlIGlzIGEgbWVhc3VyZW1lbnQgb2YgcmVsZXZhbmN5IChzZWUgVEYtSURGIGFsZ29yaXRobSkuIFRoZSB2YWx1ZSBpcyBub3QgYWJzb2x1dGUgYW5kIG9ubHkgc3VpdGFibGUgdG8gY29tcGFyZSBoaXRzIGZyb20gdGhlIHNhbWUgcmVzdWx0IHNldC5cIj5TY29yZTogMTYuMTc8XC9zcGFuPjxcL2Rpdj48XC9saT4ifSx7IlVSSSI6ImRvaToxMC4xNTk0XC9QQU5HQUVBLjg3NjE4MCIsInNjb3JlIjoxNS41NzkzOTcsImh0bWwiOiI8bGk+PGRpdiBjbGFzcz1cImNpdGF0aW9uXCI+PGEgaHJlZj1cImh0dHBzOlwvXC9kb2kucGFuZ2FlYS5kZVwvMTAuMTU5NFwvUEFOR0FFQS44NzYxODBcIiB0YXJnZXQ9XCJfc2VsZlwiIGNsYXNzPVwiZGF0YXNldC1saW5rXCI+PHN0cm9uZz5LbnVkc29uLCBLUDsgUmF2ZWxvLCBBQyAoMjAxNyk6PFwvc3Ryb25nPiBFdmlkZW5jZSBmb3IgZW5oYW5jZWQgTm9ydGggUGFjaWZpYyBJbnRlcm1lZGlhdGUgV2F0ZXIgaW4gdGhlIEJlcmluZyBTZWEgZHVyaW5nIGV4dHJlbWUgZ2xhY2lhbHMgb3ZlciB0aGUgcGFzdCAxLjIgTWEgZnJvbSByZWNvcmRzIG9mIHN0YWJsZSBpc290b3BlcyBhbmFseXplZCBhdCBJT0RQIFNpdGUgMzIzLVUxMzQyIEhvbGVzIEEsIEMsIGFuZCBEPFwvYT48XC9kaXY+PHRhYmxlIGNsYXNzPVwicmVzdWx0XCIgc3VtbWFyeT1cIkRhdGFzZXQgcmVmZXJlbmNlIGFuZCBzaXplXCIgY2VsbHNwYWNpbmc9XCIwXCIgY2VsbHBhZGRpbmc9XCIwXCI+PHRyPjx0ZCBjbGFzcz1cInRpdGxlXCI+U3VwcGxlbWVudCB0bzo8XC90ZD48dGQgY2xhc3M9XCJjb250ZW50XCI+PHN0cm9uZz5LbnVkc29uLCBLUDsgUmF2ZWxvLCBBQyAoMjAxNSk6PFwvc3Ryb25nPiBOb3J0aCBQYWNpZmljIEludGVybWVkaWF0ZSBXYXRlciBjaXJjdWxhdGlvbiBlbmhhbmNlZCBieSB0aGUgY2xvc3VyZSBvZiB0aGUgQmVyaW5nIFN0cmFpdC4gPGVtPlBhbGVvY2Vhbm9ncmFwaHk8XC9lbT48XC90ZD48XC90cj48dHI+PHRkIGNsYXNzPVwidGl0bGVcIj5SZWxhdGVkIHRvOjxcL3RkPjx0ZCBjbGFzcz1cImNvbnRlbnRcIj48c3Ryb25nPktudWRzb24sIEtQOyBSYXZlbG8sIEFDICgyMDE1KTo8XC9zdHJvbmc+IEVuaGFuY2VkIHN1YmFyY3RpYyBQYWNpZmljIHN0cmF0aWZpY2F0aW9uIGFuZCBudXRyaWVudCB1dGlsaXphdGlvbiBkdXJpbmcgZ2xhY2lhbHMgb3ZlciB0aGUgbGFzdCAxLjIgTXlyLiA8ZW0+R2VvcGh5c2ljYWwgUmVzZWFyY2ggTGV0dGVyczxcL2VtPjxcL3RkPjxcL3RyPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlNpemU6PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjYgZGF0YXNldHM8XC90ZD48XC90cj48XC90YWJsZT48ZGl2IGNsYXNzPVwiZGF0YXNldGlkXCI+PGEgaHJlZj1cImh0dHBzOlwvXC9kb2kucGFuZ2FlYS5kZVwvMTAuMTU5NFwvUEFOR0FFQS44NzYxODBcIiB0YXJnZXQ9XCJfc2VsZlwiIGNsYXNzPVwiZGF0YXNldC1saW5rIGRvaS1saW5rXCI+aHR0cHM6XC9cL2RvaS5vcmdcLzEwLjE1OTRcL1BBTkdBRUEuODc2MTgwPFwvYT4gLSA8c3BhbiB0aXRsZT1cIlRoZSBzY29yZSBpcyBhIG1lYXN1cmVtZW50IG9mIHJlbGV2YW5jeSAoc2VlIFRGLUlERiBhbGdvcml0aG0pLiBUaGUgdmFsdWUgaXMgbm90IGFic29sdXRlIGFuZCBvbmx5IHN1aXRhYmxlIHRvIGNvbXBhcmUgaGl0cyBmcm9tIHRoZSBzYW1lIHJlc3VsdCBzZXQuXCI+U2NvcmU6IDE1LjU4PFwvc3Bhbj48XC9kaXY+PFwvbGk+In0seyJVUkkiOiJkb2k6MTAuMTU5NFwvUEFOR0FFQS43NjIxMTYiLCJzY29yZSI6MTUuMzAzNzQzLCJodG1sIjoiPGxpPjxkaXYgY2xhc3M9XCJjaXRhdGlvblwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuNzYyMTE2XCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGlua1wiPjxzdHJvbmc+RG1pdHJpZXYsIEZBOyBHdWRrb3YsIEFOICgxOTg3KTo8XC9zdHJvbmc+IENvbmNlbnRyYXRpb25zIG9mIGFsaXBoYXRpYyBoeWRyb2NhcmJvbnMgYW5kIGhleGFjaGxvcm9jeWNsb2hleGFuZSBpc29tZXJzIGluIHVuZGVyLWljZSB3YXRlciwgc25vdywgYW5kIHNlYSBpY2UgZnJvbSB0aGUgR3JlZW5sYW5kIFNlYTxcL2E+PFwvZGl2Pjx0YWJsZSBjbGFzcz1cInJlc3VsdFwiIHN1bW1hcnk9XCJEYXRhc2V0IHJlZmVyZW5jZSBhbmQgc2l6ZVwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlN1cHBsZW1lbnQgdG86PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjxzdHJvbmc+RG1pdHJpZXYsIEZBOyBHdWRrb3YsIEFOICgxOTg3KTo8XC9zdHJvbmc+IEFsaXBoYXRpYyBoeWRyb2NhcmJvbnMgYW5kIGlzb21lcnMgb2YgaGV4YWNobG9yb2N5Y2xvaGV4YW5lIGluIHNwZWNpbWVucyBvZiB3YXRlciwgaWNlIGFuZCBzbm93IGZyb20gdGhlIEdyZWVubGFuZCBTZWEuIDxlbT5PY2Vhbm9sb2d5PFwvZW0+PFwvdGQ+PFwvdHI+PHRyPjx0ZCBjbGFzcz1cInRpdGxlXCI+U2l6ZTo8XC90ZD48dGQgY2xhc3M9XCJjb250ZW50XCI+MiBkYXRhc2V0czxcL3RkPjxcL3RyPjxcL3RhYmxlPjxkaXYgY2xhc3M9XCJkYXRhc2V0aWRcIj48YSBocmVmPVwiaHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjc2MjExNlwiIHRhcmdldD1cIl9zZWxmXCIgY2xhc3M9XCJkYXRhc2V0LWxpbmsgZG9pLWxpbmtcIj5odHRwczpcL1wvZG9pLm9yZ1wvMTAuMTU5NFwvUEFOR0FFQS43NjIxMTY8XC9hPiAtIDxzcGFuIHRpdGxlPVwiVGhlIHNjb3JlIGlzIGEgbWVhc3VyZW1lbnQgb2YgcmVsZXZhbmN5IChzZWUgVEYtSURGIGFsZ29yaXRobSkuIFRoZSB2YWx1ZSBpcyBub3QgYWJzb2x1dGUgYW5kIG9ubHkgc3VpdGFibGUgdG8gY29tcGFyZSBoaXRzIGZyb20gdGhlIHNhbWUgcmVzdWx0IHNldC5cIj5TY29yZTogMTUuMzxcL3NwYW4+PFwvZGl2PjxcL2xpPiJ9LHsiVVJJIjoiZG9pOjEwLjE1OTRcL1BBTkdBRUEuODg0ODMzIiwic2NvcmUiOjE1LjI5NTUxMiwiaHRtbCI6IjxsaT48ZGl2IGNsYXNzPVwiY2l0YXRpb25cIj48YSBocmVmPVwiaHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjg4NDgzM1wiIHRhcmdldD1cIl9zZWxmXCIgY2xhc3M9XCJkYXRhc2V0LWxpbmtcIj48c3Ryb25nPk1hdG9zLCBMOyBXaWVuYmVyZywgQzsgVGl0c2NoYWNrLCBKIGV0IGFsLiAoMjAxNyk6PFwvc3Ryb25nPiBTZWRpbWVudCBjb3JlIHN0dWRpZXMgYXQgdGhlIENhbXBlY2hlIGNvbGQtd2F0ZXIgY29yYWwgcHJvdmluY2UsIHNvdXRoZXJuIEd1bGYgb2YgTWV4aWNvPFwvYT48XC9kaXY+PHRhYmxlIGNsYXNzPVwicmVzdWx0XCIgc3VtbWFyeT1cIkRhdGFzZXQgcmVmZXJlbmNlIGFuZCBzaXplXCIgY2VsbHNwYWNpbmc9XCIwXCIgY2VsbHBhZGRpbmc9XCIwXCI+PHRyPjx0ZCBjbGFzcz1cInRpdGxlXCI+U3VwcGxlbWVudCB0bzo8XC90ZD48dGQgY2xhc3M9XCJjb250ZW50XCI+PHN0cm9uZz5NYXRvcywgTDsgV2llbmJlcmcsIEM7IFRpdHNjaGFjaywgSiBldCBhbC4gKDIwMTcpOjxcL3N0cm9uZz4gQ29yYWwgbW91bmQgZGV2ZWxvcG1lbnQgYXQgdGhlIENhbXBlY2hlIGNvbGQtd2F0ZXIgY29yYWwgcHJvdmluY2UsIHNvdXRoZXJuIEd1bGYgb2YgTWV4aWNvOiBJbXBsaWNhdGlvbnMgb2YgQW50YXJjdGljIEludGVybWVkaWF0ZSBXYXRlciBpbmNyZWFzZWQgaW5mbHVlbmNlIGR1cmluZyBpbnRlcmdsYWNpYWxzLiA8ZW0+TWFyaW5lIEdlb2xvZ3k8XC9lbT48XC90ZD48XC90cj48dHI+PHRkIGNsYXNzPVwidGl0bGVcIj5TaXplOjxcL3RkPjx0ZCBjbGFzcz1cImNvbnRlbnRcIj41IGRhdGFzZXRzPFwvdGQ+PFwvdHI+PFwvdGFibGU+PGRpdiBjbGFzcz1cImRhdGFzZXRpZFwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuODg0ODMzXCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGluayBkb2ktbGlua1wiPmh0dHBzOlwvXC9kb2kub3JnXC8xMC4xNTk0XC9QQU5HQUVBLjg4NDgzMzxcL2E+IC0gPHNwYW4gdGl0bGU9XCJUaGUgc2NvcmUgaXMgYSBtZWFzdXJlbWVudCBvZiByZWxldmFuY3kgKHNlZSBURi1JREYgYWxnb3JpdGhtKS4gVGhlIHZhbHVlIGlzIG5vdCBhYnNvbHV0ZSBhbmQgb25seSBzdWl0YWJsZSB0byBjb21wYXJlIGhpdHMgZnJvbSB0aGUgc2FtZSByZXN1bHQgc2V0LlwiPlNjb3JlOiAxNS4zPFwvc3Bhbj48XC9kaXY+PFwvbGk+In0seyJVUkkiOiJkb2k6MTAuMTU5NFwvUEFOR0FFQS43NzM1MjYiLCJzY29yZSI6MTUuMTg5Mzk1LCJodG1sIjoiPGxpPjxkaXYgY2xhc3M9XCJjaXRhdGlvblwiPjxhIGhyZWY9XCJodHRwczpcL1wvZG9pLnBhbmdhZWEuZGVcLzEwLjE1OTRcL1BBTkdBRUEuNzczNTI2XCIgdGFyZ2V0PVwiX3NlbGZcIiBjbGFzcz1cImRhdGFzZXQtbGlua1wiPjxzdHJvbmc+RGUgTW9sLCBMOyBWYW4gUm9vaWosIEQ7IFBpcmxldCwgSCBldCBhbC4gKDIwMTEpOjxcL3N0cm9uZz4gU2VkaW1lbnRvbG9neSBhbmQgYWdlIGRldGVybWluYXRpb24gb2Ygc2VkaW1lbnQgY29yZXMgZnJvbSB0aGUgUGVubWFyY2gnaCBhbmQgR3VpbHZpbmVjIENhbnlvbnMgKEJheSBvZiBCaXNjYXkpPFwvYT48XC9kaXY+PHRhYmxlIGNsYXNzPVwicmVzdWx0XCIgc3VtbWFyeT1cIkRhdGFzZXQgcmVmZXJlbmNlIGFuZCBzaXplXCIgY2VsbHNwYWNpbmc9XCIwXCIgY2VsbHBhZGRpbmc9XCIwXCI+PHRyPjx0ZCBjbGFzcz1cInRpdGxlXCI+U3VwcGxlbWVudCB0bzo8XC90ZD48dGQgY2xhc3M9XCJjb250ZW50XCI+PHN0cm9uZz5EZSBNb2wsIEw7IFZhbiBSb29paiwgRDsgUGlybGV0LCBIIGV0IGFsLiAoMjAxMSk6PFwvc3Ryb25nPiBDb2xkLXdhdGVyIGNvcmFsIGhhYml0YXRzIGluIHRoZSBQZW5tYXJjJ2ggYW5kIEd1aWx2aW5lYyBDYW55b25zIChCYXkgb2YgQmlzY2F5KTogRGVlcC13YXRlciB2ZXJzdXMgc2hhbGxvdy13YXRlciBzZXR0aW5ncy4gPGVtPk1hcmluZSBHZW9sb2d5PFwvZW0+PFwvdGQ+PFwvdHI+PHRyPjx0ZCBjbGFzcz1cInRpdGxlXCI+U2l6ZTo8XC90ZD48dGQgY2xhc3M9XCJjb250ZW50XCI+NiBkYXRhc2V0czxcL3RkPjxcL3RyPjxcL3RhYmxlPjxkaXYgY2xhc3M9XCJkYXRhc2V0aWRcIj48YSBocmVmPVwiaHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjc3MzUyNlwiIHRhcmdldD1cIl9zZWxmXCIgY2xhc3M9XCJkYXRhc2V0LWxpbmsgZG9pLWxpbmtcIj5odHRwczpcL1wvZG9pLm9yZ1wvMTAuMTU5NFwvUEFOR0FFQS43NzM1MjY8XC9hPiAtIDxzcGFuIHRpdGxlPVwiVGhlIHNjb3JlIGlzIGEgbWVhc3VyZW1lbnQgb2YgcmVsZXZhbmN5IChzZWUgVEYtSURGIGFsZ29yaXRobSkuIFRoZSB2YWx1ZSBpcyBub3QgYWJzb2x1dGUgYW5kIG9ubHkgc3VpdGFibGUgdG8gY29tcGFyZSBoaXRzIGZyb20gdGhlIHNhbWUgcmVzdWx0IHNldC5cIj5TY29yZTogMTUuMTk8XC9zcGFuPjxcL2Rpdj48XC9saT4ifSx7IlVSSSI6ImRvaToxMC4xNTk0XC9QQU5HQUVBLjgxMTc1OCIsInNjb3JlIjoxNC45NzAzMjMsImh0bWwiOiI8bGk+PGRpdiBjbGFzcz1cImNpdGF0aW9uXCI+PGEgaHJlZj1cImh0dHBzOlwvXC9kb2kucGFuZ2FlYS5kZVwvMTAuMTU5NFwvUEFOR0FFQS44MTE3NThcIiB0YXJnZXQ9XCJfc2VsZlwiIGNsYXNzPVwiZGF0YXNldC1saW5rXCI+PHN0cm9uZz5Hb2xkaGFtbWVyLCBUOyBNYXgsIFQ7IEJydW5uZXIsIEIgZXQgYWwuICgyMDExKTo8XC9zdHJvbmc+IFBob3NwaGF0ZSDOtMK54oG4TyBwb3JlLXdhdGVyIHByb2ZpbGVzIG9mIHNlZGltZW50IGNvcmUgR2VvQjExODA3LTIgYW5kIEdlb0IxMTgwNC00PFwvYT48XC9kaXY+PHRhYmxlIGNsYXNzPVwicmVzdWx0XCIgc3VtbWFyeT1cIkRhdGFzZXQgcmVmZXJlbmNlIGFuZCBzaXplXCIgY2VsbHNwYWNpbmc9XCIwXCIgY2VsbHBhZGRpbmc9XCIwXCI+PHRyPjx0ZCBjbGFzcz1cInRpdGxlXCI+U3VwcGxlbWVudCB0bzo8XC90ZD48dGQgY2xhc3M9XCJjb250ZW50XCI+PHN0cm9uZz5Hb2xkaGFtbWVyLCBUOyBNYXgsIFQ7IEJydW5uZXIsIEIgZXQgYWwuICgyMDExKTo8XC9zdHJvbmc+IE1hcmluZSBzZWRpbWVudCBwb3JlLXdhdGVyIHByb2ZpbGVzIG9mIHBob3NwaGF0ZSBkMThPIHVzaW5nIGEgcmVmaW5lZCBtaWNyby1leHRyYWN0aW9uLiA8ZW0+TGltbm9sb2d5IGFuZCBPY2Vhbm9ncmFwaHktTWV0aG9kczxcL2VtPjxcL3RkPjxcL3RyPjx0cj48dGQgY2xhc3M9XCJ0aXRsZVwiPlNpemU6PFwvdGQ+PHRkIGNsYXNzPVwiY29udGVudFwiPjQgZGF0YXNldHM8XC90ZD48XC90cj48XC90YWJsZT48ZGl2IGNsYXNzPVwiZGF0YXNldGlkXCI+PGEgaHJlZj1cImh0dHBzOlwvXC9kb2kucGFuZ2FlYS5kZVwvMTAuMTU5NFwvUEFOR0FFQS44MTE3NThcIiB0YXJnZXQ9XCJfc2VsZlwiIGNsYXNzPVwiZGF0YXNldC1saW5rXCI+aHR0cHM6XC9cL2RvaS5wYW5nYWVhLmRlXC8xMC4xNTk0XC9QQU5HQUVBLjgxMTc1ODxcL2E+IC0gPHNwYW4gdGl0bGU9XCJUaGUgc2NvcmUgaXMgYSBtZWFzdXJlbWVudCBvZiByZWxldmFuY3kgKHNlZSBURi1JREYgYWxnb3JpdGhtKS4gVGhlIHZhbHVlIGlzIG5vdCBhYnNvbHV0ZSBhbmQgb25seSBzdWl0YWJsZSB0byBjb21wYXJlIGhpdHMgZnJvbSB0aGUgc2FtZSByZXN1bHQgc2V0LlwiPlNjb3JlOiAxNC45NzxcL3NwYW4+PFwvZGl2PjxcL2xpPiJ9XSwiZmFjZXRzIjpudWxsLCJtYXhTY29yZSI6MTcuMjExMTI0LCJvZmZzZXQiOjAsInF1ZXJ5SWRlbnRpZmllciI6IjQ5YWNlNmVjLTA3NzItM2RjMC04NTBkLTY0ZmIzOTAzY2Q2NSIsInNlc3Npb24iOiJkMjRnMmNsdHJvM3FqOW52NmJvOWhrMHAwNyIsInRpbWVJbkRhdGFiYXNlIjoyMiwidG90YWxDb3VudCI6ODYxMTEsImh0bWxTdW1tYXJ5IjoiPHN0cm9uZz44NjExMSBkYXRhc2V0czxcL3N0cm9uZz4gZm91bmQgb24gc2VhcmNoIGZvciA8c3Ryb25nIHRpdGxlPVwiUXVlcnk6ICZyYXF1bzt3YXRlciZsYXF1bztcIj4mcmFxdW87d2F0ZXImbGFxdW87PFwvc3Ryb25nPiBpbiB0b3BpYyA8c3Ryb25nPk9jZWFuczxcL3N0cm9uZz4iLCJodG1sU25pcHBldFJTUyI6IjxsaW5rIHJlbD1cImFsdGVybmF0ZVwiIHRpdGxlPVwiUEFOR0FFQSBsYXRlc3QgZGF0YXNldHMgYWJvdXQgJnF1b3Q7d2F0ZXImcXVvdDsgaW4gdG9waWMgT2NlYW5zXCIgdHlwZT1cImFwcGxpY2F0aW9uXC9yc3MreG1sXCIgaHJlZj1cIlwvdG9vbHNcL2xhdGVzdC1kYXRhc2V0cy5yc3M/dD1PY2VhbnMmYW1wO3E9d2F0ZXImYW1wO2NvdW50PTEwXCI+In0=
  recorded_at: 2020-01-22 17:17:59 GMT
  recorded_with: vcr/0.4.0, webmockr/0.5.0
- request:
    method: get
    uri: https://www.pangaea.de/advanced/search.php?count=10&offset=0&q=water&mindate=2013-06-01&maxdate=2013-07-01
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      cache-control: private, max-age=10800, pre-check=10800
      connection: keep-alive
      content-encoding: gzip
      content-type: application/json; charset=UTF-8
      date: Wed, 22 Jan 2020 17:17:56 GMT
      last-modified: Fri, 15 Apr 2016 11:55:50 GMT
      server: PANGAEA/2.0
      status: HTTP/1.1 200 OK
      strict-transport-security: max-age=31536000
      transfer-encoding: chunked
      vary:
      - Accept-Encoding
      - Cookie, X-PanLoginID, Authorization
      x-content-type-options: nosniff
      x-frame-options: SAMEORIGIN
      x-ua-compatible: IE=Edge
    body:
      encoding: ASCII-8BIT
      file: no
      string: 
  recorded_at: 2020-01-22 17:17:59 GMT
  recorded_with: vcr/0.4.0, webmockr/0.5.0
- request:
    method: get
    uri: https://www.pangaea.de/advanced/search.php?count=10&offset=0&q=water&minlon=-124.2&minlat=41.8&maxlon=-116.8&maxlat=46.1
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      cache-control: private, max-age=10800, pre-check=10800
      connection: keep-alive
      content-encoding: gzip
      content-type: application/json; charset=UTF-8
      date: Wed, 22 Jan 2020 17:17:57 GMT
      last-modified: Fri, 15 Apr 2016 11:55:50 GMT
      server: PANGAEA/2.0
      status: HTTP/1.1 200 OK
      strict-transport-security: max-age=31536000
      transfer-encoding: chunked
      vary:
      - Accept-Encoding
      - Cookie, X-PanLoginID, Authorization
      x-content-type-options: nosniff
      x-frame-options: SAMEORIGIN
      x-ua-compatible: IE=Edge
    body:
      encoding: ASCII-8BIT
      file: no
      string: 
  recorded_at: 2020-01-22 17:17:59 GMT
  recorded_with: vcr/0.4.0, webmockr/0.5.0
- request:
    method: get
    uri: https://www.pangaea.de/advanced/search.php?count=10&offset=0&q=citation%3AArcher
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/4.3 crul/0.9.0
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      cache-control: private, max-age=10800, pre-check=10800
      connection: keep-alive
      content-encoding: gzip
      content-type: application/json; charset=UTF-8
      date: Wed, 22 Jan 2020 17:17:58 GMT
      last-modified: Fri, 15 Apr 2016 11:55:50 GMT
      server: PANGAEA/2.0
      status: HTTP/1.1 200 OK
      strict-transport-security: max-age=31536000
      transfer-encoding: chunked
      vary:
      - Accept-Encoding
      - Cookie, X-PanLoginID, Authorization
      x-content-type-options: nosniff
      x-frame-options: SAMEORIGIN
      x-ua-compatible: IE=Edge
    body:
      encoding: ASCII-8BIT
      file: no
      string: 
  recorded_at: 2020-01-22 17:17:59 GMT
  recorded_with: vcr/0.4.0, webmockr/0.5.0
