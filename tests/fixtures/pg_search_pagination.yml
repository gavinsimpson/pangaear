http_interactions:
- request:
    method: get
    uri: https://www.pangaea.de/advanced/search.php?count=10&offset=0&q=florisphaera
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/4.0 crul/0.8.4.9100
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      cache-control: private, max-age=10800, pre-check=10800
      content-encoding: gzip
      content-type: application/json; charset=UTF-8
      date: Wed, 11 Sep 2019 20:33:07 GMT
      last-modified: Fri, 15 Apr 2016 11:55:50 GMT
      server: PANGAEA/2.0
      status: 'HTTP/2 200 '
      strict-transport-security: max-age=31536000
      vary:
      - Accept-Encoding
      - Cookie, X-PanLoginID
      x-content-type-options: nosniff
      x-frame-options: SAMEORIGIN
      x-ua-compatible: IE=Edge
    body:
      encoding: ASCII-8BIT
      string: 
  recorded_at: 2019-09-11 20:33:08 GMT
  recorded_with: vcr/0.3.0.9100, webmockr/0.4.0
- request:
    method: get
    uri: https://www.pangaea.de/advanced/search.php?count=10&offset=10&q=florisphaera
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/4.0 crul/0.8.4.9100
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      cache-control: private, max-age=10800, pre-check=10800
      content-encoding: gzip
      content-type: application/json; charset=UTF-8
      date: Wed, 11 Sep 2019 20:33:07 GMT
      last-modified: Fri, 15 Apr 2016 11:55:50 GMT
      server: PANGAEA/2.0
      status: 'HTTP/2 200 '
      strict-transport-security: max-age=31536000
      vary:
      - Accept-Encoding
      - Cookie, X-PanLoginID
      x-content-type-options: nosniff
      x-frame-options: SAMEORIGIN
      x-ua-compatible: IE=Edge
    body:
      encoding: ASCII-8BIT
      string: 
  recorded_at: 2019-09-11 20:33:08 GMT
  recorded_with: vcr/0.3.0.9100, webmockr/0.4.0
- request:
    method: get
    uri: https://www.pangaea.de/advanced/search.php?count=10&offset=20&q=florisphaera
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/4.0 crul/0.8.4.9100
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      cache-control: private, max-age=10800, pre-check=10800
      content-encoding: gzip
      content-type: application/json; charset=UTF-8
      date: Wed, 11 Sep 2019 20:33:08 GMT
      last-modified: Fri, 15 Apr 2016 11:55:50 GMT
      server: PANGAEA/2.0
      status: 'HTTP/2 200 '
      strict-transport-security: max-age=31536000
      vary:
      - Accept-Encoding
      - Cookie, X-PanLoginID
      x-content-type-options: nosniff
      x-frame-options: SAMEORIGIN
      x-ua-compatible: IE=Edge
    body:
      encoding: ASCII-8BIT
      string: 
  recorded_at: 2019-09-11 20:33:08 GMT
  recorded_with: vcr/0.3.0.9100, webmockr/0.4.0
